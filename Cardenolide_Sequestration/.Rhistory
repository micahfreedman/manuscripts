ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species))+
geom_point(aes(shape = Tissue))+
scale_shape_manual(values = c(19,21))+
scale_fill_manual(values = ascl.colors)+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species))+
geom_point(aes(shape = Tissue))+
scale_shape_manual(values = c(19,22))+
scale_fill_manual(values = ascl.colors)+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species))+
geom_point(aes(shape = Tissue))+
scale_shape_manual(values = c(19,23))+
scale_fill_manual(values = ascl.colors)+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species))+
geom_point(aes(shape = Tissue))+
scale_shape_manual(values = c(15,19))+
scale_fill_manual(values = ascl.colors)+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, fill = Species))+
geom_point(aes(shape = Tissue))+
scale_shape_manual(values = c(21,22))+
scale_fill_manual(values = ascl.colors)+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species))+
geom_point(aes(shape = Tissue))+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species))+
geom_point(aes(shape = Tissue), size = 3)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species))+
geom_point(aes(shape = Tissue), size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species))+
geom_point(aes(shape = Tissue), size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = 'bottom')
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species))+
geom_point(aes(shape = Tissue), size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)
stressplot(cards_nmds)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species))+
geom_point(aes(shape = Tissue), size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)
pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species))+
geom_point(aes(shape = Tissue), size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)
dev.off()
pdf('./figures/Figx3.pdf', height = 8, width = 10)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species))+
geom_point(aes(shape = Tissue), size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)
dev.off()
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, fill = Species))+
geom_point(aes(shape = Tissue), size = 3)+
scale_shape_manual(values = c(15,19))+
scale_fill_manual(values = ascl.colors)+
theme_light(base_size = 16)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, fill = Species))+
geom_point(aes(shape = Tissue), size = 3)+
scale_shape_manual(values = c(20,21))+
scale_fill_manual(values = ascl.colors)+
theme_light(base_size = 16)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, fill = Species))+
geom_point(aes(shape = Tissue), size = 3)+
scale_shape_manual(values = c(20,22))+
scale_fill_manual(values = ascl.colors)+
theme_light(base_size = 16)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, fill = Species))+
geom_point(aes(shape = Tissue), size = 3)+
scale_shape_manual(values = c(21,22))+
scale_fill_manual(values = ascl.colors)+
theme_light(base_size = 16)
library(plotly)
plot_ly(cards.data.scores, x = NMDS1, y = NMDS2, z = NMDS3, color = ~Species, colors = ascl.colors)
cards.data.scores
plot_ly(cards.data.scores, x = ~NMDS1, y = ~NMDS2, z = ~NMDS3, color = ~Species, colors = ascl.colors)
plot_ly(cards.data.scores[cards.data.scores$Tissue=='Wing',], x = ~NMDS1, y = ~NMDS2, z = ~NMDS3, color = ~Species, colors = ascl.colors)
bb = read.table(file = '~/Documents/GitHub/F-H_2018/Raw_data/chr_lengths.txt')
head(bb)
nrow(bb)
unique(bb$V1)
genos <- readRDS('~/Documents/GitHub/F-H_2018/Raw_data/flt_snps_clean.RDS')
nrow(genos)
head(genos)
unique(genos$group)
length(unique(genos$group))
chrlen <- read.table(file = '~/Documents/GitHub/F-H_2018/Raw_data/chr_lengths.txt')
chrlen$V1
chrlen$V2
mean(chrlen$V2)
hist(chrlen$V2)
hist(chrlen$V2, breaks = 50)
hist(chrlen$V2[chrlen$V2 < 200000], breaks = 50)
hist(chrlen$V2[chrlen$V2 < 50000], breaks = 50)
hist(chrlen$V2[chrlen$V2 < 100000], breaks = 50)
hist(chrlen$V2[chrlen$V2 > 0], breaks = 50)
hist(chrlen$V2[chrlen$V2 > 1000], breaks = 50)
hist(chrlen$V2[chrlen$V2 > 2000], breaks = 50)
hist(chrlen$V2[chrlen$V2 > 3000], breaks = 50)
colSums(chrlen$V2)
colSum(chrlen$V2)
sum(chrlen$V2)
adult.info <- read.csv('./data/adult_data.csv')
head(adult.info)
names(cardenolides)
head(cardenolides)
head(adult.info)
adult.info$Cat.ID
install.packages('rethinking')
names(adult.info)
names(adult.info)[1]
names(adult.info)[1] <- 'Sample'
names(adult.info)
merge(adult.info[,names(adult.info) %in% c('Sample','Year','Usage','Plant.ID','Pop','GH','Group','Mon.Pop','maternal_family','sym.allo')], cardenolides, by = 'Sample')
merge(adult.info[,names(adult.info) %in% c('Sample','Usage','Plant.ID','Pop','GH','Group','Mon.Pop','maternal_family','sym.allo')], cardenolides, by = 'Sample')
wing.cardenolides <- merge(adult.info[,names(adult.info) %in% c('Sample','Usage','Plant.ID','Pop','GH','Group','Mon.Pop','maternal_family','sym.allo')], cardenolides[cardenolides$Tissue == 'Wing',], by = 'Sample')
nrow(wing.cardenolides)
table(wing.cardenolides$maternal_family)
length(unique(wing.cardenolides$maternal_family))
hist(length(unique(wing.cardenolides$maternal_family)))
hist(table(wing.cardenolides$maternal_family))
hist(table(wing.cardenolides$maternal_family), breaks = 10)
hist(table(wing.cardenolides$maternal_family), breaks = 15)
hist(table(wing.cardenolides$maternal_family), breaks = 20)
hist(table(wing.cardenolides$maternal_family), breaks = 25)
hist(table(wing.cardenolides$maternal_family), breaks = 15)
names(wing.cardenolides)
library(lme4)
library(lmerTest)
lmer(concentration ~ Species + Mon.Pop + sym.allo + Year + GH + (1|Pop/Plant.ID) + (1|maternal.family), data = wing.cardenolides)
summary(lmer(concentration ~ Species + Mon.Pop + sym.allo + Year + GH + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides))
summary(lmer(concentration ~ Species + Mon.Pop + sym.allo + Year + GH + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),]))
wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),]$concentration
hist(wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),]$concentration)
hist(wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),]$concentration, breaks = 25)
raenf(lmer(concentration ~ Species + Mon.Pop + sym.allo + Year + GH + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),]))
ranef(lmer(concentration ~ Species + Mon.Pop + sym.allo + Year + GH + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),]))
ranef(lmer(concentration ~ Species + Mon.Pop + sym.allo + Year + GH + (1|Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),]))
ranef(lmer(concentration ~ Species + Mon.Pop + sym.allo + Year + GH + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),]))
ranef(lmer(concentration ~  Mon.Pop + sym.allo + Year + GH + (1|Species/Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),]))
summary(lmer(concentration ~  Mon.Pop + sym.allo + Year + GH + (1|Species/Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),]))
summary(lmer(concentration ~  Mon.Pop + sym.allo + (1|Species/Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),]))
summary(lmer(concentration ~  Mon.Pop + sym.allo + Species + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),]))
summary(lmer(concentration ~  Mon.Pop + sym.allo + Species + (1|Pop) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),]))
summary(lmer(concentration ~  Mon.Pop + sym.allo + Species + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),]))
sequestration.model <- lmer(concentration ~  Mon.Pop + sym.allo + Species + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),]))
sequestration.model <- lmer(concentration ~  Mon.Pop + sym.allo + Species + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
summary(sequestration.model)
?emmeans
emmeans(sequestration.model, specs = ~Mon.Pop + Species, data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
library(emmeans)
emmeans(sequestration.model, specs = ~Mon.Pop + Species, data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
install.packages('pbkrtest')
emmeans(sequestration.model, specs = ~Mon.Pop + Species, data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
sequestration.model <- lmer(concentration ~  Mon.Pop*Species + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
summary(sequestration.model)
emmeans(sequestration.model, specs = ~Mon.Pop*Species, data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
sequestration.model <- lmer(concentration ~  Mon.Pop*Species + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
summary(sequestration.model)
Anova(sequestration.model, type = 3)
library(Car)
library(car)
install.packages('car')
library(car)
Anova(sequestration.model, type = 3)
emmeans(sequestration.model, specs = ~Mon.Pop*Species, data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
emmeans(sequestration.model, specs = ~Mon.Pop, data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
library(multcomp)
library(multcomp)
glht(sequestration.model, linfct = mcp(Mon.Pop = "Tukey"))
TukeyHSD(sequestration.model, which = 'Mon.Pop')
glht(sequestration.model, linfct = mcp(Mon.Pop = "Tukey"))
summary(glht(sequestration.model, linfct = mcp(Mon.Pop = "Tukey")))
mariana.cardenolides = read.table(file="~/Documents/grad_school/pacific_monarchs/marianas_2015/wings.cardenolides.txt",header=T)
total.cardenolides = rowSums(mariana.cardenolides[4:20],dims=1)
total.cardenolides
mariana.cardenolides$total.cardenolides = rowSums(mariana.cardenolides[4:20])
mariana.cardenolides
mariana.cardenolides[mariana.cardenolides$Site %in% c('Guam','Rota'),]
hist(mariana.cardenolides[mariana.cardenolides$Site %in% c('Guam','Rota'),]$total.cardenolides)
hist(wing.cardenolides[wing.cardenolides$Mon.Pop == 'GU',]$concentration)
hist(wing.cardenolides[wing.cardenolides$Mon.Pop == 'GU' & wing.cardenolides$Species=='ASCU',]$concentration)
hist(mariana.cardenolides[mariana.cardenolides$Site == 'Guam',]$total.cardenolides)
lm(total.cardenolides ~ Site + sex, data = mariana.cardenolides)
summary(lm(total.cardenolides ~ Site + sex, data = mariana.cardenolides))
summary(lm(total.cardenolides ~ Site + sex, data = mariana.cardenolides[mariana.cardenolides$Site!='Saipan',]))
cardenolides[cardenolides$Species=='ASCU',]
cardenolides[cardenolides$Species=='ASCU',]$Sample
cardenolides[cardenolides$Species=='ASCU' & cardenolides$Tissue=='Leaf',]$Sample
adult.info[adult.info$Species=='ASCU',]
adult.info[adult.info$Species=='ASCU',]$Sample
adult.info[adult.info$Species=='ASCU',]$Pop
merge(cardenolides[cardenolides$Species=='ASCU' & cardenolides$Tissue=='Leaf',], adult.info[adult.info$Species=='ASCU', names(adult.info) %in% c('Sample','Pop')], by = 'Sample')
adult.info[adult.info$Species=='ASCU', names(adult.info) %in% c('Sample','Pop')]
cardenolides[cardenolides$Species=='ASCU' & cardenolides$Tissue=='Leaf',]
cardenolides[cardenolides$Species=='ASCU' & cardenolides$Tissue=='Leaf',]$Sample
cardenolides[cardenolides$Species=='ASCU' & cardenolides$Tissue=='Leaf',]$Sample
adult.info[adult.info$Species=='ASCU', names(adult.info) %in% c('Sample','Pop')]$Sample
adult.info[adult.info$Species=='ASCU',]$Pop
adult.info[adult.info$Species=='ASCU',]
adult.info[adult.info$Species=='ASCU',]$Pop
adult.info[adult.info$Species=='ASCU',names(adult.info) %in% c('Sample','Pop')]
cardenolides[cardenolides$Species=='ASCU' & cardenolides$Tissue=='Leaf',]$Sample
ascu.leaf.cards <- cardenolides[cardenolides$Species=='ASCU' & cardenolides$Tissue=='Leaf',]
ascu.leaf.cards$Sample
ascu.leaf.cards$Pop <- ifelse(ascu.leaf.cards$Sample %in% c('1004','1005','1014','1017','1018','1020','1024','1025','1027','1028','1030','1034','1037','1042','1059','1062','1057','172','186','195','203','216','218','224','L170','L175','L188','L190','L199','L206','L215'), 'Guam', 'Rota')
ascu.leaf.cards$Pop
ascu.leaf.cards$concentration
ggplot(ascu.leaf.cards, aes(x = Pop, y = concentration))+
geom_boxplot()
summary(lm(concentration ~ Pop, data = ascu.leaf.cards))
local.adaptation.seq.model <- lmer(concentration ~ Mon.Pop + Species + sym.allo + Sex + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
adult.info <- read.csv('./data/adult_data.csv')
head(adult.info)
names(adult.info)[1] <- 'Sample'
wing.cardenolides <- merge(adult.info[,names(adult.info) %in% c('Sample','Usage','Plant.ID','Pop','GH','Group','Mon.Pop','maternal_family','sym.allo','Sex')], cardenolides[cardenolides$Tissue == 'Wing',], by = 'Sample')
table(wing.cardenolides$maternal_family) #440 total samples from 73 maternal families
names(wing.cardenolides) #Description of columns:
local.adaptation.seq.model <- lmer(concentration ~ Mon.Pop + Species + sym.allo + Sex + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
summary(local.adaptation.seq.model)
sequestration.model <- lmer(concentration ~  Mon.Pop*Species + Sex + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
summary(sequestration.model)
ggplot(wing.cardenolides, aes(x = Mon.Pop, y = concentration))+
geom_boxplot(aes(fill = Species))+
facet_wrap(~Species)+
scale_fill_manual(values = ascl.colors)
ggplot(wing.cardenolides, aes(x = Mon.Pop, y = concentration))+
geom_boxplot(aes(fill = Species))+
facet_wrap(~Species, scales = 'free.y')+
scale_fill_manual(values = ascl.colors)
ggplot(wing.cardenolides, aes(x = Mon.Pop, y = concentration))+
geom_boxplot(aes(fill = Species))+
facet_wrap(~Species, scales = 'free_y')+
scale_fill_manual(values = ascl.colors)
ggplot(wing.cardenolides, aes(x = Mon.Pop, y = concentration))+
geom_boxplot(aes(fill = Species), outlier.color = 'white')+
facet_wrap(~Species, scales = 'free_y')+
scale_fill_manual(values = ascl.colors)+
theme_light(base_size = 14)
ggplot(wing.cardenolides, aes(x = Mon.Pop, y = concentration))+
geom_boxplot(aes(fill = Species), outlier.color = 'white')+
geom_point(position = position_jitterdodge(0.5), pch =21)+
facet_wrap(~Species, scales = 'free_y')+
scale_fill_manual(values = ascl.colors)+
theme_light(base_size = 14)
ggplot(wing.cardenolides, aes(x = Mon.Pop, y = concentration))+
geom_boxplot(aes(fill = Species), outlier.color = 'white')+
geom_point(position = position_jitterdodge(0.5), pch =21)+
facet_wrap(~Species, scales = 'free_y')+
scale_fill_manual(values = ascl.colors)+
theme_light(base_size = 14)
ggplot(wing.cardenolides, aes(x = Mon.Pop, y = concentration))+
geom_boxplot(aes(fill = Species), outlier.color = 'white')+
geom_point(position = position_jitter(0.5), pch =21)+
facet_wrap(~Species, scales = 'free_y')+
scale_fill_manual(values = ascl.colors)+
theme_light(base_size = 14)
ggplot(wing.cardenolides, aes(x = Mon.Pop, y = concentration))+
geom_boxplot(aes(fill = Species), outlier.color = 'white', aes = 0.2)+
geom_point(aes(fill = Species), position = position_jitter(0.2), pch =21)+
facet_wrap(~Species, scales = 'free_y')+
scale_fill_manual(values = ascl.colors)+
theme_light(base_size = 14)
ggplot(wing.cardenolides, aes(x = Mon.Pop, y = concentration))+
geom_boxplot(aes(fill = Species), outlier.color = 'white', alpha = 0.2)+
geom_point(aes(fill = Species), position = position_jitter(0.2), pch =21)+
facet_wrap(~Species, scales = 'free_y')+
scale_fill_manual(values = ascl.colors)+
theme_light(base_size = 14)
ggplot(wing.cardenolides, aes(x = Mon.Pop, y = concentration))+
geom_boxplot(aes(fill = Species), outlier.color = 'white', alpha = 0.3)+
geom_point(aes(fill = Species), position = position_jitter(0.2), pch =21)+
facet_wrap(~Species, scales = 'free_y')+
scale_fill_manual(values = ascl.colors)+
theme_light(base_size = 14)
ggplot(wing.cardenolides, aes(x = Mon.Pop, y = concentration))+
geom_boxplot(aes(fill = Species), outlier.color = 'white', alpha = 0.3)+
geom_point(aes(fill = Species), position = position_jitter(0.2), pch =21)+
facet_wrap(~Species, scales = 'free_y')+
scale_fill_manual(values = ascl.colors)+
theme_light(base_size = 14)+
xlab('Monarch Population')+
ylab('Cardenolide Concentration (mg/g)')
ggplot(wing.cardenolides, aes(x = Mon.Pop, y = concentration))+
geom_boxplot(aes(fill = Species), outlier.color = 'white', alpha = 0.3)+
geom_point(aes(fill = Species), position = position_jitter(0.2), pch =21)+
facet_wrap(~Species, scales = 'free_y')+
scale_fill_manual(values = ascl.colors)+
theme_light(base_size = 14)+
xlab('Monarch Population')+
ylab('Cardenolide Concentration (mg/g)')+
theme(legend.position = 'none')
ggplot(wing.cardenolides, aes(x = Mon.Pop, y = concentration))+
geom_boxplot(aes(fill = Species), outlier.color = 'white', alpha = 0.3)+
geom_point(aes(fill = Species), position = position_jitter(0.2), pch =21)+
facet_wrap(~Species, scales = 'free_y')+
scale_fill_manual(values = ascl.colors)+
theme_light(base_size = 14)+
xlab('Monarch Population')+
ylab('Cardenolide Concentration (mg/g)')+
theme(legend.position = 'none')+
theme(axis.text.x = element_text(angle = 75))
ggplot(wing.cardenolides, aes(x = Mon.Pop, y = concentration))+
geom_boxplot(aes(fill = Species), outlier.color = 'white', alpha = 0.3)+
geom_point(aes(fill = Species), position = position_jitter(0.2), pch =21)+
facet_wrap(~Species, scales = 'free_y')+
scale_fill_manual(values = ascl.colors)+
theme_light(base_size = 14)+
xlab('Monarch Population')+
ylab('Cardenolide Concentration (mg/g)')+
theme(legend.position = 'none')+
theme(axis.text.x = element_text(angle = 75, hjust = 1))
summary(sequestration.model)
summary(sequestration.model) #Once again ASCU and AU are the reference levels. ASCU higher than all other species. The strongest interaction term is for Puerto Rico on ASYR, which has a strongly negative estimate.
Anova(sequestration.model, type = 3) #does indeed indicate a highly significant monarch population x species effect, although that by itself is not indicative of local adaptation
emmeans(sequestration.model, specs = ~Mon.Pop*Species, data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
summary(glht(sequestration.model, linfct = mcp(Mon.Pop = "Tukey")))
wing.cardenolides$combination <- paste(wing.cardenolides$Mon.Pop, wing.cardenolides$Species, sep = ' x ')
wing.cardenolides$combination
sequestration.model.x <- lmer(combination + Mon.Pop + Sex + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
sequestration.model.x <- lmer(concentration ~ combination + Mon.Pop + Sex + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
summary(glht(sequestration.model, linfct = mcp(Mon.Pop = "Tukey")))
summary(glht(sequestration.model, linfct = mcp(Mon.Pop = "Tukey"))) #gives an error message related to interaction term. As an alternative, can create a new data column that coresponds to the combination of mon.pop x species, and then use this as a predictor.
summary(glht(sequestration.model, linfct = mcp(combination = "Tukey"))) #gives virtually identical pairwise estimates across monarch pouplations as the above specification. The key point here is that Guam really does have significantly lower levels of sequestration than all other populations included in the study.
emmeans(sequestration.model, specs = ~Mon.Pop, data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
summary(glht(sequestration.model.x, linfct = mcp(Mon.Pop = "Tukey"))) #gives virtually identical pairwise estimates across monarch pouplations as the above specification. The key point here is that Guam really does have significantly lower levels of sequestration than all other populations included in the study.
summary(glht(sequestration.model, linfct = mcp(Mon.Pop = "Tukey"))) #gives virtually identical pairwise estimates across monarch pouplations as the above specification. The key point here is that Guam really does have significantly lower levels of sequestration than all other populations included in the study.
summary(glht(sequestration.model.x, linfct = mcp(Mon.Pop = "Tukey"))) #gives virtually identical pairwise estimates across monarch pouplations as the above specification. The key point here is that Guam really does have significantly lower levels of sequestration than all other populations included in the study.
levels(wing.cardenolides$combination)
unique(wing.cardenolides$combination)
emmeans(sequestration.model, specs = ~Mon.Pop, data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),]) #marginal means for monarch population only
emm.mon.pop <- as.data.frame(emmeans(sequestration.model, specs = ~Mon.Pop, data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])) #marginal means for monarch population only
emm.mon.pop
ggplot(emm.mon.pop, aes(x = Mon.Pop, y = emmean))+
geom_point()+
geom_errorbar(aes(ymin = lowel.CL, y = upper.CL), width = 0.3)
ggplot(emm.mon.pop, aes(x = Mon.Pop, y = emmean))+
geom_point()+
geom_errorbar(aes(ymin = lower.CL, y = upper.CL), width = 0.3)
ggplot(emm.mon.pop, aes(x = Mon.Pop, y = emmean))+
geom_point()+
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.3)
aggregate(concentration ~ Mon.Pop + Species, data = wing.cardenolides[wing.cardenolides$Species %in% c('ASCU','ASYR') & wing.cardenolides$Mon.Pop %in% c('ENA','PR')], mean)
aggregate(concentration ~ Mon.Pop + Species, data = wing.cardenolides[wing.cardenolides$Species %in% c('ASCU','ASYR') & wing.cardenolides$Mon.Pop %in% c('ENA','PR'),], mean)
aggregate(concentration ~ Mon.Pop + Species, data = wing.cardenolides[wing.cardenolides$Species %in% c('ASCU','ASYR') & wing.cardenolides$Mon.Pop %in% c('ENA','PR'),], function(y) c(mean(y), sd(y) / sqrt(length(y))))
rxn.norm <- function(data, pop1, pop2, spp1, spp2)
{}
rxn.norm.plot <- function(df1, pop1, pop2, spp1, spp2){
df.use <- df1[df1$Species %in% c(spp1,spp2) & df1$Mon.Pop %in% c(pop1,pop2),]
agg.data <- aggregate(concentration ~ Mon.Pop + Species, df1,
function(y) c(mean(y), sd(y) / sqrt(length(y))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Species, y = Concentration, group = Mon.Pop, col = Mon.Pop))+
geom_point()+
geom_line()
}
rxn.norm.plot(wing.cardenolides, ENA, PR, ASYR, ASCU)
rxn.norm.plot(wing.cardenolides, pop1 = 'ENA', pop2 = 'PR', spp1 = 'ASYR', spp2 = 'ASCU')
aggregate(concentration ~ Mon.Pop + Species, data = wing.cardenolides[wing.cardenolides$Species %in% c('ASCU','ASYR') & wing.cardenolides$Mon.Pop %in% c('ENA','PR'),], function(y) c(mean(y), sd(y) / sqrt(length(y))))
rxn.norm.plot <- function(df1, pop1, pop2, spp1, spp2){
df.use <- df1[df1$Species %in% c(spp1,spp2) & df1$Mon.Pop %in% c(pop1,pop2),]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df1,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Species, y = Concentration, group = Mon.Pop, col = Mon.Pop))+
geom_point()+
geom_line()
}
rxn.norm.plot(wing.cardenolides, pop1 = 'ENA', pop2 = 'PR', spp1 = 'ASYR', spp2 = 'ASCU')
rxn.norm.plot <- function(df1, pop1, pop2, spp1, spp2){
df.use <- df1[df1$Species %in% c('spp1','spp2') & df1$Mon.Pop %in% c('pop1','pop2'),]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df1,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Species, y = Concentration, group = Mon.Pop, col = Mon.Pop))+
geom_point()+
geom_line()
}
rxn.norm.plot(wing.cardenolides, pop1 = 'ENA', pop2 = 'PR', spp1 = 'ASYR', spp2 = 'ASCU')
rxn.norm.plot <- function(df1, pops, spp){
df.use <- df1[df1$Species %in% c('spp1','spp2') & df1$Mon.Pop %in% c('pop1','pop2'),]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df1,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Species, y = Concentration, group = Mon.Pop, col = Mon.Pop))+
geom_point()+
geom_line()
}
rxn.norm.plot <- function(df1, pops, spp){
df.use <- df1[df1$Species %in% spp & df1$Mon.Pop %in% pops,]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df1,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Species, y = Concentration, group = Mon.Pop, col = Mon.Pop))+
geom_point()+
geom_line()
}
rxn.norm.plot(wing.cardenolides, pops = c('ENA','PR'), spp = c('ASYR','ASCU'))
rxn.norm.plot <- function(df1, pops, spp){
df.use <- df1[df1$Species %in% spp & df1$Mon.Pop %in% pops,]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df.use,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Species, y = Concentration, group = Mon.Pop, col = Mon.Pop))+
geom_point()+
geom_line()
}
rxn.norm.plot(wing.cardenolides, pops = c('ENA','PR'), spp = c('ASYR','ASCU'))
ggplot(agg.data, aes(x = Mon.Pop, y = Concentration, group = Mon.Pop, col = Species))+
geom_point()+
geom_line()
rxn.norm.plot <- function(df1, pops, spp){
df.use <- df1[df1$Species %in% spp & df1$Mon.Pop %in% pops,]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df.use,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Mon.Pop, y = Concentration, group = Mon.Pop, col = Species))+
geom_point()+
geom_line()
}
rxn.norm.plot <- function(df1, pops, spp){
df.use <- df1[df1$Species %in% spp & df1$Mon.Pop %in% pops,]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df.use,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Mon.Pop, y = Concentration, group = Mon.Pop, col = Species))+
geom_point()+
geom_line()
}
rxn.norm.plot(wing.cardenolides, pops = c('ENA','PR'), spp = c('ASYR','ASCU'))
ggplot(agg.data, aes(x = Mon.Pop, y = Concentration, group = Species, col = Species))+
geom_point()+
geom_line()
rxn.norm.plot <- function(df1, pops, spp){
df.use <- df1[df1$Species %in% spp & df1$Mon.Pop %in% pops,]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df.use,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Mon.Pop, y = Concentration, group = Species, col = Species))+
geom_point()+
geom_line()
}
rxn.norm.plot(wing.cardenolides, pops = c('ENA','PR'), spp = c('ASYR','ASCU'))
rxn.norm.plot <- function(df1, pops, spp){
df.use <- df1[df1$Species %in% spp & df1$Mon.Pop %in% pops,]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df.use,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Species, y = Concentration, group = Mon.Pop, col = Mon.Pop))+
geom_point(aes(position = position_dodge(0.2)), pch = 21)+
geom_line()+
geom_errorbar(aes(ymin = Concentration - SE, ymax = Concentration + SE))
}
rxn.norm.plot(wing.cardenolides, pops = c('ENA','PR'), spp = c('ASYR','ASCU'))
rxn.norm.plot <- function(df1, pops, spp){
df.use <- df1[df1$Species %in% spp & df1$Mon.Pop %in% pops,]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df.use,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Species, y = Concentration, group = Mon.Pop, col = Mon.Pop))+
geom_point(aes(position = position_jitterdodge(0.2)), pch = 21)+
geom_line()+
geom_errorbar(aes(ymin = Concentration - SE, ymax = Concentration + SE))
}
rxn.norm.plot(wing.cardenolides, pops = c('ENA','PR'), spp = c('ASYR','ASCU'))
rxn.norm.plot <- function(df1, pops, spp){
df.use <- df1[df1$Species %in% spp & df1$Mon.Pop %in% pops,]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df.use,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Species, y = Concentration, group = Mon.Pop, col = Mon.Pop))+
geom_point(pch = 21)+
geom_line()+
geom_errorbar(aes(ymin = Concentration - SE, ymax = Concentration + SE))
}
rxn.norm.plot(wing.cardenolides, pops = c('ENA','PR'), spp = c('ASYR','ASCU'))
rxn.norm.plot <- function(df1, pops, spp){
df.use <- df1[df1$Species %in% spp & df1$Mon.Pop %in% pops,]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df.use,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Species, y = Concentration, group = Mon.Pop, col = Mon.Pop))+
geom_point(pch = 21)+
geom_line()+
geom_errorbar(aes(ymin = Concentration - SE, ymax = Concentration + SE), width = 0.2)+
theme_light(base_size = 16)
}
rxn.norm.plot(wing.cardenolides, pops = c('ENA','PR'), spp = c('ASYR','ASCU'))
