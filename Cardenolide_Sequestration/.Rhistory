aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('North American Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
ggplot(all_trials[all_trials$Population == 'E' & all_trials$Cohort == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
geom_bar(stat = 'identity', aes(x = e2.mean[[2]], y = e2.mean[[1]]/100), width = 0.3, col = 'red')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('North American Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
lates[lates$Population.x == 'E' & lates$Generation.x == 2,]
lates$Generation.x
lates[lates$Population.x == 'E',]
lates$Population.x
lates[lates$Population.x == 'North_America',]
ggplot(lates[lates$Population.x == 'North_America',],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('North American Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
E2.all.trials <- ggplot(all_trials[all_trials$Population == 'E' & all_trials$Cohort == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
geom_bar(stat = 'identity', aes(x = e2.mean[[2]], y = e2.mean[[1]]/100), width = 0.3, col = 'red')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('North America Post 10/3 Eclosion')+theme(plot.title = element_text(size = 16, hjust = 0.5))
ggplot(lates[lates$Population.x == 'North_America',],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('North American Post-10/3 Emergences')+theme(plot.title = element_text(size = 16, hjust = 0.5))
lates[lates$Population.x == 'North_America',]
lates.nam = lates[lates$Population.x == 'North_America',]
Data = lates.nam
meanvec=na.omit(Data$Vec)
Rs=na.omit(Data$R)
meanvec_radians = rad(meanvec)
X_coord = cos(meanvec_radians)
Y_coord = sin(meanvec_radians)
weighted_X_coord = X_coord * Rs
weighted_Y_coord = Y_coord * Rs
Data$X <- weighted_X_coord
Data$Y <- weighted_Y_coord
write.csv(Data, file = '~/Desktop/2020_monarch_orientation/later.E2', row.names = F)
Find_group_mean("~/Desktop/2020_monarch_orientation/later.E2.csv")
write.csv(Data, file = '~/Desktop/2020_monarch_orientation/later.E2.csv', row.names = F)
Find_group_mean("~/Desktop/2020_monarch_orientation/later.E2.csv")
which(lates.nam$Vector_Direction > 0 & lates.nam$Vector_Direction < 10)
lates.nam[which(lates.nam$Vector_Direction > 0 & lates.nam$Vector_Direction < 10),]
bbz <- combined.orientation2[combined.orientation2$age_during_trial < 14,]
ggplot(bbz[bbz$Population == 'E' & all_trials$Cohort == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('Babies Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
bbz
table(bbz$population)
ggplot(bbz[bbz$Population.x == 'E' & bbz$Generation.x == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('Babies Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
bbz$Population.x
ggplot(bbz[bbz$population == 'E' & bbz$Generation.x == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('Babies Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
bbz <- combined.orientation2[combined.orientation2$age_during_trial < 10,]
ggplot(bbz[bbz$population == 'E' & bbz$Generation.x == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('Babies Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
bbz <- combined.orientation2[combined.orientation2$age_during_trial > 20,]
ggplot(bbz[bbz$population == 'E' & bbz$Generation.x == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('Babies Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
bbz <- combined.orientation2[combined.orientation2$age_during_trial > 30,]
ggplot(bbz[bbz$population == 'E' & bbz$Generation.x == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('Babies Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
bbz <- combined.orientation2[combined.orientation2$age_during_trial > 40,]
ggplot(bbz[bbz$population == 'E' & bbz$Generation.x == 2,],
aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0, direction = 1)+
scale_x_continuous(breaks = c(-90, 0, 90, 180, 270, 360), limits = c(0,360))+
geom_bar(stat = 'identity', width = 0.3, col = 'black')+
theme_bw()+
theme(axis.title = element_blank(), axis.ticks = element_blank(), axis.text.y = element_blank())+
ggtitle('Babies Autumn')+theme(plot.title = element_text(size = 16, hjust = 0.5))
View(age.models)
View(d)
data = read.csv(file = '~/Downloads/monarchs_gbif.csv')
dat2 <- read.csv("~/Downloads/monarchs_gbif.csv", header=T, na.strings=c("","NA"))
head(dat2)
write.csv(dat2, '~/Desktop/monarchs_gbif.csv')
library(ggplot2)
setwd('~/Desktop/2021_orientation_experiment/')
source(file = './scripts/txt_to_csv.R')
source(file = '../scripts/Get_individual_mean_R_time.R')
source(file = './scripts/weighted_X_Y_coordinates.R')
source(file = './scripts/plotting_mean_angles.R')
source(file = '../scripts/weighted_X_Y_coordinates.R')
source(file = './scripts/plotting_mean_angles.R')
source(file = '../scripts/plotting_mean_angles.R')
ggplot(all_trials, aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0)+
geom_bar(stat = 'identity', width = 0.05, aes(col = Population), fill = 'white')+
theme_minimal()+
theme(axis.text = element_blank(), axis.title = element_blank())+
scale_color_manual(values = c('gold','blue','red'))+
facet_wrap(~Population)+
theme(legend.position = 'NULL')
ggplot(all_trials, aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0)+
geom_bar(stat = 'identity', width = 0.05, aes(col = Population), fill = 'white')+
theme_minimal()+
theme(axis.text = element_blank(), axis.title = element_blank())+
scale_color_manual(values = c('gold','blue','orange','red'))+
facet_wrap(~Population)+
theme(legend.position = 'NULL')
source(file = './scripts/Get_group_mean_R.R')
source(file = '../scripts/Get_group_mean_R.R')
write.csv(Data[Data$Population=='E',], file = './eastern_only.csv')
Find_group_mean('./eastern_only.csv')
write.csv(Data[Data$Population=='H',], file = './hybrid_only.csv')
Find_group_mean('./hybrid__only.csv')
Find_group_mean('./hybrid__=only.csv')
Find_group_mean('./hybrid_only.csv')
head(all_trials)
ggplot(all_trials, aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0)+
geom_bar(stat = 'identity', width = 0.05, aes(col = Population), fill = 'white')+
theme_minimal()+
theme(axis.text = element_blank(), axis.title = element_blank())+
scale_color_manual(values = c('gold','blue','orange','red'))+
facet_wrap(~ID)+
theme(legend.position = 'NULL')
library(ggplot2)
library(dplyr)
library(vegan)
library(plotly)
library(lme4)
library(lmerTest)
library(emmeans)
library(car)
library(multcomp)
library(stringr)
setwd('~/Documents/GitHub/Sites/manuscripts/Cardenolide_Sequestration/')
raw_data <- read.csv('./data/concatenated_cardenolides.csv') #read in data. *note that negative values have already been replaced with 0s in this dataframe
str(raw_data)
subtract_baseline <- function(dfx) {
standard.means <- colSums(dfx[dfx$Tissue == 'Standard', 9:ncol(dfx)], na.rm = T) /
nrow(dfx[dfx$Tissue=='Standard',])
dfx2 <- sweep(dfx[,9:ncol(dfx)], 2, standard.means)
dfx2[dfx2 < 0] <- 0
dfx3 <- cbind(dfx[,1:8], dfx2)
}
cardenolides <- subtract_baseline(raw_data)
masses <- read.csv('./data/tissue_mass.csv') #read in data corresponding to the mass of the tissue sampled
str(masses) #merge based on "Sample" column, which has the same indexing in the cardenolides dataframe
cardenolides <- merge(masses[,c(1,4)], cardenolides, by = 'Sample')
standardize_cards <- function(x){
std_vals <- (cardenolides[,10:ncol(cardenolides)] / cardenolides$Digitoxin) * 0.8 * 0.15 /
(cardenolides$Mass/1000)
std_vals$concentration <- rowSums(std_vals)
full_data <- cbind(cardenolides[,1:9], std_vals)
}
cardenolides <- standardize_cards(cardenolides) #These values correspond to cardenolides (per unit of 0.15 mg digitoxin / g tissue)
cardenolides <- cardenolides[-which(is.na(cardenolides$concentration)),] #drop the one row where the concentration of internal standard wasn't recorded, thereby producing NAs across rows
sequestration_ratio <- function(x){
wing_means <- do.call(data.frame, aggregate(concentration ~ Species + Tissue,
function(y) c(mean(y), sd(y) / sqrt(length(y))), data = x))
names(wing_means)[3:4] <- c('mean','SE')
ratio <- wing_means[wing_means$Tissue == 'Wing',]$mean / wing_means[wing_means$Tissue == 'Leaf',]$mean
ratio.table <- data.frame(cbind(levels(factor(x$Species)), ratio))
names(ratio.table)[1] <- 'Species'
output <- list(wing_means, ratio.table)
print(output)
}
sequestration_ratio(cardenolides)
cardenolides$Species <- factor(cardenolides$Species, c('GOPH','ASCU','AINC','ASFA','ASYR','ASPEC'))
#make vector of colors for plotting
ascl.colors <- c('blue','purple','coral','gold','dodgerblue','turquoise')
#pdf('./figures/Figx2.pdf', height = 6, width = 5)
ggplot(cardenolides, aes(x = Tissue, y = concentration, fill = Species))+
geom_boxplot(outlier.color = 'white', alpha = 0.3)+
geom_point(position = position_jitterdodge(1), pch = 21)+
scale_fill_manual(values = ascl.colors)+
facet_wrap(~Species, ncol = 2, scales = 'free')+
theme_light(base_size = 16)+
theme(legend.position = 'none')+
ylab('Cardenolide Concentration (mg/g)')
cards.multivar <- function(x){
df1 <- x[-which(x$concentration==0),]
df2 <- df1[,10:ncol(df1)-1]
}
cards.multivariate <- cards.multivar(cardenolides)
cards_nmds <- metaMDS(comm = cards.multivariate, distance = 'bray', k = 10, trymax = 20)
stressplot(cards_nmds)
cards.data.scores <- cbind(cardenolides[-which(cardenolides$concentration==0),1:9], scores(cards_nmds))
plot_ly(cards.data.scores[cards.data.scores$Tissue=='Wing',], x = ~NMDS1, y = ~NMDS2, z = ~NMDS3, color = ~Species, colors = ascl.colors) #3d version of the same figure, but only showing points for wings. Might have issues trying to run with R versions < 4.0.0
larp <- darp[darp$Species=='ASPEC',]
cards.dist.mat <- vegdist(larp[,10:79], method = 'bray')
adonis2(cards.dist.mat ~ Tissue, data = larp, permutations = 1000)
cardenolides.polarity <- cardenolides[-which(rowSums(cardenolides[,10:79])<0.1),]
cardenolides.polarity$polarity <- polarity.index(cardenolides.polarity)
PI.plot <- do.call(data.frame, aggregate(polarity ~ Species, cardenolides.polarity[cardenolides.polarity$Tissue=='Wing',], function(y) c(mean(y), sd(y))))
names(PI.plot)[2:3] <- c('polarity', 'SD')
adult.info <- read.csv('./data/adult_data.csv')
head(adult.info)
names(adult.info)[1] <- 'Sample'
wing.cardenolides <- merge(adult.info[,names(adult.info) %in% c('Sample','Usage','Plant.ID','Pop','GH','Group','Mon.Pop','maternal_family','sym.allo','Sex')], cardenolides[cardenolides$Tissue == 'Wing',], by = 'Sample')
table(wing.cardenolides$maternal_family) #440 total samples from 73 maternal families
names(wing.cardenolides) #Description of columns:
table(wing.cardenolides$Species, wing.cardenolides$maternal_family)
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(21,15))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))
local.adaptation.seq.model <- lmer(concentration ~ Mon.Pop + Species + sym.allo + Sex + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
summary(local.adaptation.seq.model) #intercept is based on Australian monarchs on ASCU. All species are lower than ASCU (checks out), and Puerto Rico and Guam both sequester less than Australia, according to this model. However, there is no effect of local adaptation: in fact, sequestration on sympatric host plants is actually modestly lower (this is probably due to Guam and ASCU being a sympatric combo)
Anova(local.adaptation.seq.model, type = 3)
sequestration.model <- lmer(concentration ~  Mon.Pop*Species + Sex + (1|Pop/Plant.ID) + (1|maternal_family) , data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
summary(sequestration.model) #Once again ASCU and AU are the reference levels. ASCU higher than all other species. The strongest interaction term is for Puerto Rico on ASYR, which has a strongly negative estimate. Males sequester modestly less than females (I think this is a general pattern that has been reported before).
plot_model(sequestration.model)
ranef(sequestration.model)[[2]]
hist(ranef(sequestration.model)[[2]][[1]], breaks = 10) #distribution of random intercepts for maternal families
#####
#Within each milkweed species, test for whether leaf and wing cardenolide composition is different
darp <- cardenolides[-which(rowSums(cardenolides[,10:79]) == 0),]
polarity.index <- function(dfx){
cards.numeric <- dfx[,10:79] #can't include samples with sum 0 rows
rel.abund <- sweep(cards.numeric, 1, rowSums(cards.numeric), "/")
vec.RT <- as.numeric(sub('.', '', names(dfx)[10:79]))
polSum <- rowSums(data.frame(mapply(`*`,rel.abund,vec.RT)))
pol.ind <- 1 - (polSum / max(polSum))
print(pol.ind)
}
#pdf('./figures/Figx3c.pdf', height = 8, width = 3)
ggplot(PI.plot, aes(x = Species, y = polarity, col = Species, fill = Species))+
geom_point(size = 4, pch = 21)+
geom_errorbar(aes(ymin = polarity - SD, ymax = polarity + SD), width = 0.2, size = 1)+
theme_light(base_size = 16)+
ylab('Polarity Index - Wing Tissue')+
scale_color_manual(values = ascl.colors)+
scale_fill_manual(values = ascl.colors)+
theme(legend.position = 'none')+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#pdf('./figures/Fig4xa.pdf', height = 6, width = 5)
ggplot(wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),],
aes(x = Mon.Pop, y = concentration))+
geom_boxplot(aes(fill = Species), outlier.color = 'white', alpha = 0.3)+
geom_point(aes(fill = Species), position = position_jitter(0.25), pch =21)+
facet_wrap(~Species, scales = 'free')+
scale_fill_manual(values = ascl.colors[c(1,2,5,6)])+
theme_light(base_size = 16)+
xlab('Monarch Population')+
ylab('Wing Cardenolide Concentration (mg/g)')+
theme(legend.position = 'none')+
theme(axis.text.x = element_text(angle = 75, hjust = 1))
Anova(sequestration.model, type = 3)
randoms<-ranef(sequestration.model, condVar = TRUE)
gg <- attr(ranef(sequestration.model, condVar = TRUE)[[2]], "postVar")
rand.interc<-randoms$maternal_family
df$lev.names<-factor(df$lev.names,levels=df$lev.names[order(df$Intercepts)])
Anova(sequestration.model, type = 3) #does indeed indicate a highly significant monarch population x species effect, although that by itself is not indicative of local adaptation
emm.combos <- as.data.frame(emmeans(sequestration.model, specs = ~Mon.Pop*Species, data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])) #estimated marginal means for each species x monarch population combination
write.csv(emm.combos, file = './figures/TableSxx.csv', row.names = FALSE)
#pdf('./figures/FigS5.pdf', height = 6.5, width = 6.5)
ggplot(emm.combos[emm.combos$Species=='ASCU',], aes(x = Mon.Pop, y = emmean, col = sym.allo))+
geom_point(size = 3)+
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.3, size = 1)+
theme_light(base_size = 14)+
ylab('Estimated Marginal Mean - \nCardenolide Concentration (mg/g)')+
xlab('Monarch Population')+
ggtitle(label = 'Sequestration from ASCU')+
scale_color_manual(values = c('black','red'))+
theme(plot.title = element_text(hjust = 0.5, face = 'italic'))+
annotate("text", x = 1, y = 18, label = "A", size = 6)+
annotate("text", x = 2, y = 16, label = "AB", size = 6)+
annotate("text", x = 3, y = 16, label = "A", size = 6)+
annotate("text", x = 4, y = 11.5, label = "B", size = 6)+
annotate("text", x = 5, y = 14, label = "AB", size = 6)+
annotate("text", x = 6, y = 18, label = "A", size = 6)
dev.off()
summary(glht(sequestration.model, linfct = mcp(Mon.Pop = "Tukey"))) #gives a warning message related to interaction term. As an alternative, can create a new data column that corresponds to the combination of mon.pop x species, and then use this as a predictor.
wing.cardenolides$combination <- paste(wing.cardenolides$Mon.Pop, wing.cardenolides$Species, sep = ' x ')
sequestration.model.combo <- lmer(concentration ~ combination + Mon.Pop + Sex + (1|Pop/Plant.ID) + (1|maternal_family), data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])
summary(glht(sequestration.model.combo, linfct = mcp(Mon.Pop = "Tukey"))) #Can't get estimates because model includes too many levels for the combination term (n = 36) for the model to be fully specified.
emm.mon.pop <- as.data.frame(emmeans(sequestration.model, specs = ~Mon.Pop, data = wing.cardenolides[!wing.cardenolides$Species %in% c('ASFA','AINC'),])) #marginal means for monarch population only
emm.mon.pop
rxn.norm.plot <- function(df1, pops, spp){
df.use <- df1[df1$Species %in% spp & df1$Mon.Pop %in% pops,]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df.use,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('concentration', 'SE')
ggplot(agg.data, aes(x = Species, y = concentration, group = Mon.Pop, fill = Mon.Pop))+
geom_errorbar(aes(ymin = concentration - SE, ymax = concentration + SE, col = Mon.Pop),
width = 0.1, size = 1)+
geom_point(size = 3, pch = 21)+
geom_line(size = 1)+
theme_light(base_size = 16)+
scale_fill_manual(values = c('darkgreen','orange'))+
scale_color_manual(values = c('darkgreen','orange'))+
ylab('Wing Cardenolide Concentration (mg/g)')+
theme(legend.position = c(0.8, 0.9), legend.title = element_blank(),
legend.background = element_rect(fill = 'grey95', colour = 'black'))
}
(rxn.norm1 <- rxn.norm.plot(wing.cardenolides, pops = c('ENA','PR'), spp = c('ASYR','ASCU')))
family_averages <- aggregate(concentration ~ maternal_family + Mon.Pop + Species, wing.cardenolides[wing.cardenolides$Mon.Pop %in% c('ENA','PR') & wing.cardenolides$Species %in% c('ASYR','ASCU'),], mean)
head(wing.cardenolides)
d2 <- merge(wing.cardenolides[,1:9], cardenolides.polarity, by = 'Sample')
d2$pri <- ifelse(d2$Mon.Pop=='PR', 'Puerto\nRico', 'Other\nPopulations')
aggregate(polarity ~ pri + Species, data = d2[d2$Tissue=='Wing',], mean)
aggregate(polarity ~ pri + Species, data = d2[d2$Tissue=='Wing',], sd)
polarity.model <- lmer(polarity ~ pri + Species + (1|maternal_family), data = d2[d2$Species %in% c('ASYR','ASPEC'),])
summary(polarity.model)
plot.polarity <- data.frame(emmeans(polarity.model, "pri", "Species"))
df1 <- aggregate(concentration ~   Species + Mon.Pop + maternal_family, mean, data = wing.cardenolides[wing.cardenolides$Species =='ASCU',])
names(df1)[4] <- 'ASCU_conc'
df2 <- aggregate(concentration ~  Species + Mon.Pop + maternal_family, mean, data = wing.cardenolides[wing.cardenolides$Species =='GOPH',])
names(df2)[4] <- 'GOPH_conc'
df<-data.frame(Intercepts=randoms$maternal_family[,1],
sd.interc=2*sqrt(gg[,,1:length(gg)]),
lev.names=rownames(rand.interc))
#pdf('./figures/FigS2.pdf', height = 12, width = 8)
ggplot(df,aes(lev.names,Intercepts))+
geom_hline(yintercept=0) +geom_errorbar(aes(ymin=Intercepts-sd.interc,
ymax=Intercepts+sd.interc), width=0,color="black") + geom_point(size = 1)+
theme_bw() + xlab("Maternal Family") + ylab("")+
theme(axis.text.x=element_text(size=rel(1.2)),
axis.title.x=element_text(size = 12),
axis.text.y=element_text(size=rel(1.2)),
panel.grid.minor=element_blank())+
coord_flip()+
ylab('Random Intercept')
plot.card.cor <- merge(df1[,c(3,4)], df2, by = 'maternal_family')
df3 <- aggregate(concentration ~ Species + Mon.Pop + maternal_family, mean, data = wing.cardenolides[wing.cardenolides$Species%in%c('ASCU','GOPH'),])
cardenolides[cardenolides$Species=='ASCU' & cardenolides$Tissue=='Leaf',]$Sample
merge(cardenolides[cardenolides$Species=='ASCU' & cardenolides$Tissue=='Leaf',], adult.info[adult.info$Species=='ASCU', names(adult.info) %in% c('Sample','Pop')], by = 'Sample')
adult.info[adult.info$Species=='ASCU',names(adult.info) %in% c('Sample','Pop')]
ascu.leaf.cards <- cardenolides[cardenolides$Species=='ASCU' & cardenolides$Tissue=='Leaf',]
ascu.leaf.cards$Sample
ascu.leaf.cards$Pop <- ifelse(ascu.leaf.cards$Sample %in% c('1004','1005','1014','1017','1018','1020','1024','1025','1027','1028','1030','1034','1037','1042','1059','1062','1057','172','186','195','203','216','218','224','L170','L175','L188','L190','L199','L206','L215'), 'Guam', 'Rota')
guam.rota.ascu <- lm(concentration ~ Pop, data = ascu.leaf.cards) #not significantly higher, but def in the same direction as field samples
summary(guam.rota.ascu)
emmeans(guam.rota.ascu, specs = 'Pop')
spp.leaf.means <- aggregate(concentration ~ Species, mean, data = cardenolides[cardenolides$Tissue=='Leaf',])
ASCU <- wing.cardenolides[wing.cardenolides$Species=='ASCU',]
ASCU$adjusted_values <- ASCU$concentration / spp.leaf.means[spp.leaf.means$Species=='ASCU',][[2]]
ASCU$guam <- ifelse(ASCU$Mon.Pop=='GU', 'Guam', 'Others')
aggregate(adjusted_values ~ guam, mean, data = ASCU)
ascu.comp.aves <- colMeans(wing.cardenolides[wing.cardenolides$Species=='ASCU',19:88])
emm.combos$sym.allo <- ifelse(emm.combos$Mon.Pop %in% c('PR','GU') & emm.combos$Species == 'ASCU', 'sympatric',
ifelse(emm.combos$Mon.Pop %in% c('HI','AU') &
emm.combos$Species=='GOPH', 'sympatric',
ifelse(emm.combos$Mon.Pop=='ENA' & emm.combos$Species == 'ASYR', 'sympatric', ifelse(emm.combos$Mon.Pop=='CA' & emm.combos$Species=='ASPEC', 'sympatric', 'allopatric'))))
#pdf('./figures/Fig4a.pdf', height = 6, width = 5)
ggplot(emm.combos, aes(x = Mon.Pop, y = emmean, col = sym.allo))+
geom_point(size = 3)+
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.3, size = 1)+
theme_light(base_size = 16)+
ylab('Estimated Marginal Mean - \nCardenolide Concentration (mg/g)')+
xlab('Monarch Population')+
scale_color_manual(values = c('black','red'))+
facet_wrap(~Species, scales = 'free')+
theme(legend.title = element_blank(), legend.position = 'bottom')+
theme(axis.text.x = element_text(angle = 75, hjust = 1))
sort(ascu.comp.aves, decreasing = TRUE)
#pdf('./figures/FigS4.pdf', height = 6, width = 6)
ggplot(emm.mon.pop, aes(x = Mon.Pop, y = emmean))+
geom_point(size = 3)+
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.4, size = 1)+
theme_light(base_size = 16)+
ylab('Estimated Marginal Mean - \nCardenolide Concentration (mg/g)')+
xlab('Monarch Population')
#pdf('./figures/Figx4.pdf', height = 6, width = 4)
rxn.norm1 +
geom_point(data = family_averages, aes(col = Mon.Pop), alpha = 0.2)+
scale_color_manual(values = c('darkgreen','orange'))+
geom_line(data = family_averages, aes(group = maternal_family, col = Mon.Pop), alpha = 0.3)
#pdf('./figures/Figx4b.pdf', height = 6, width = 4)
ggplot(plot.polarity, aes(x = pri, y = emmean))+
geom_point(size = 3)+
geom_errorbar(aes(ymax = upper.CL, ymin = lower.CL), width = 0.3, size= 0.7)+
facet_wrap(~Species)+
theme_light()+
ylab('Polarity Index')+
theme(axis.title.x = element_blank(), axis.text = element_text(size = 14),
axis.title.y = element_text(size = 16), axis.text.x = element_text(angle = 60, hjust = 1))+
theme(strip.text = element_text(size = 16))
ggplot(plot.card.cor, aes(x = ASCU_conc, y = GOPH_conc))+
geom_point(aes(col = Mon.Pop))
ggplot(df3, aes(x = Species, y = concentration, col = Mon.Pop))+
geom_point()+
geom_line(aes(group = maternal_family))+
scale_color_manual(values = c('cyan','limegreen','forestgreen','purple','blue','orange'))+
facet_wrap(~Mon.Pop)+
theme_light()
ggplot(ascu.leaf.cards, aes(x = Pop, y = concentration))+
geom_boxplot()
#pdf('../figures/fig5d.pdf',height = 7, width = 3)
ggplot(ASCU, aes(x = guam, y = adjusted_values, col = guam))+
geom_boxplot(outlier.color = 'white', aes(fill = guam), alpha = 0.1)+
geom_point(position = position_jitterdodge(0.25))+
theme_light(base_size = 16)+
theme(axis.title.x = element_blank(), legend.position = 'none')+
ylab('Adjusted Cardenolide Concentration')+
scale_color_manual(values = c('mediumorchid','orange'))+
scale_fill_manual(values = c('mediumorchid','orange'))+
ggtitle('Reared Monarchs -\nHost Plant Adjusted')+
theme(plot.title = element_text(hjust = 0.5))
sum(sort(ascu.comp.aves, decreasing = TRUE)[c(1,4,5)]) / sum(ascu.comp.aves) #Frugoside, calactin, and calotropin comprise 51% of the total cardenolides sequestered from ASCU. Frugoside is the most abundant compound, with about 24% of the total amount.
goph.comp.aves <- colMeans(wing.cardenolides[wing.cardenolides$Species=='GOPH',19:88])
sort(goph.comp.aves, decreasing = TRUE) #For GOPH, frugoside is also the most abundant compound. Calactin is the fourth most abundant compound, and calotropin is sixth.
sum(sort(goph.comp.aves, decreasing = TRUE)[c(1,4,6)]) / sum(goph.comp.aves)
asyr.comp.aves <- colMeans(wing.cardenolides[wing.cardenolides$Species=='ASYR',19:88])
sort(asyr.comp.aves, decreasing = TRUE) #For ASYR, 1.06 (likely to be aspecioside, which registered at 1.12) is by far the most abundant compound.
sort(asyr.comp.aves, decreasing = TRUE)[1] / sum(asyr.comp.aves) #Aspecioside comprises 48.3% of the total amount sequestered from ASYR
aspec.comp.aves <- colMeans(wing.cardenolides[wing.cardenolides$Species=='ASPEC',19:88])
sort(aspec.comp.aves, decreasing = TRUE)
sort(aspec.comp.aves, decreasing = TRUE)[1] / sum(aspec.comp.aves) #Aspecioside comprises 44.0% of the total amount sequestered from ASPEC
adult.info$Date <- as.Date(adult.info$Date, "%m/%d/%Y")
adult.info$development_time <- as.numeric(difftime(as.Date(adult.info$Eclosion, "%m/%d/%Y"),adult.info$Date, units = 'days') + 8)
df2 <- merge(adult.info[,c(1,20,31)], wing.cardenolides, by = 'Sample')
ggplot(na.omit(df2[df2$development_time > 15 & df2$development_time < 30,]),
aes(x = development_time, y = concentration))+
geom_point()+
facet_wrap(~Species, scales = 'free_y')+
stat_smooth(method = 'lm', formula = y ~ poly(x, 1), col = 'black')+
theme_light(base_size = (16))+
ylab('Cardenolide Concentration (mg/g)')+
xlab('Days to Eclosion')+
theme(legend.title = element_blank())
df2$cards.adjusted <- df2$concentration/df2$development_time
df2$cards.adjusted
df2$development_time
df2
df3 <- df2[df2$development_time > 15,]
model.dev.time.adjusted <- lmer(cards.adjusted ~ Mon.Pop + Species + sym.allo + Sex + (1|Pop/Plant.ID) + (1|maternal_family), data = df3[!df3$Species %in% c('ASFA','AINC'),])
summary(model.dev.time.adjusted)
ggplot(all_trials, aes(x = Vector_Direction, y = R))+
coord_polar(theta = "x", start = 0)+
geom_bar(stat = 'identity', width = 0.05, aes(col = Population), fill = 'white')+
theme_minimal()+
theme(axis.text = element_blank(), axis.title = element_blank())+
scale_color_manual(values = c('gold','blue','orange','red'))+
facet_wrap(~ID)+
theme(legend.position = 'NULL')
family_averages
ggplot(df3[df3$Mon.Pop %in% c('ENA','PR') & df3$Species %in% c('ASYR','ASCU'),],
aes(x = Mon.Pop, y = cards.adjusted))+
geom_point()
ggplot(df3[df3$Mon.Pop %in% c('ENA','PR') & df3$Species %in% c('ASYR','ASCU'),],
aes(x = Mon.Pop, y = cards.adjusted))+
geom_point()+
facet_wrap(~Species)
aggregate(cards.adjusted ~ Mon.Pop + Species, data = df3[df3$Mon.Pop %in% c('ENA','PR') & df3$Species %in% c('ASYR','ASCU'),], mean)
df3.means <- aggregate(cards.adjusted ~ Mon.Pop + Species, data = df3[df3$Mon.Pop %in% c('ENA','PR') & df3$Species %in% c('ASYR','ASCU'),], mean)
(df3.means <- aggregate(cards.adjusted ~ Mon.Pop + Species, data = df3[df3$Mon.Pop %in% c('ENA','PR') & df3$Species %in% c('ASYR','ASCU'),], mean))
(df3.means <- aggregate(cards.adjusted ~ Mon.Pop + Species, data = df3[df3$Species %in% c('ASYR','ASCU'),], mean))
(df3.means <- aggregate(cards.adjusted ~ Mon.Pop + Species, data = df3, mean))
df3$pr.vs.all <- ifelse(df3$Mon.Pop == 'PR', 'PR', 'other')
aggregate(cards.adjusted ~ pr.vs.all + Species, df3, mean)
(0.313 - 0.242) / 0.313
(0.313 - 0.242) / 0.242
(0.705 - 0.542) / 0.542
