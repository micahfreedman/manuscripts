rxn.norm.plot(wing.cardenolides, pops = c('ENA','PR'), spp = c('ASYR','ASCU'))
rxn.norm.plot <- function(df1, pops, spp){
df.use <- df1[df1$Species %in% spp & df1$Mon.Pop %in% pops,]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df.use,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Species, y = Concentration, group = Mon.Pop, fill = Mon.Pop))+
geom_errorbar(aes(ymin = Concentration - SE, ymax = Concentration + SE, col = Mon.Pop),
width = 0.1, size = 0.5)+
geom_point(size = 2, pch = 21)+
geom_line(size = 0.5, aes(col = Mon.Pop))+
theme_light(base_size = 8)+
scale_fill_manual(values = c('darkgreen','orange'))+
scale_color_manual(values = c('darkgreen','orange'))+
ylab('Wing Cardenolide Concentration (mg/g)')+
theme(legend.position = c(0.8, 0.76), legend.title = element_blank(),
legend.background = element_rect(fill = 'grey95', col = 'black'))
}
rxn.norm.plot(wing.cardenolides, pops = c('ENA','PR'), spp = c('ASYR','ASCU'))
rxn.norm.plot <- function(df1, pops, spp){
df.use <- df1[df1$Species %in% spp & df1$Mon.Pop %in% pops,]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df.use,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Species, y = Concentration, group = Mon.Pop, fill = Mon.Pop))+
geom_errorbar(aes(ymin = Concentration - SE, ymax = Concentration + SE, col = Mon.Pop),
width = 0.1, size = 0.5)+
geom_point(size = 2, pch = 21)+
geom_line(size = 0.5, aes(col = Mon.Pop))+
theme_light(base_size = 8)+
scale_fill_manual(values = c('darkgreen','orange'))+
scale_color_manual(values = c('darkgreen','orange'))+
ylab('Wing Cardenolide Concentration (mg/g)')+
theme(legend.position = c(0.8, 0.76), legend.title = element_blank(),
legend.background = element_rect(fill = 'grey95', colour = 'black'))
}
rxn.norm.plot(wing.cardenolides, pops = c('ENA','PR'), spp = c('ASYR','ASCU'))
pdf('./figures/Figx4.pdf', height = 4, width = 2)
rxn.norm.plot(wing.cardenolides, pops = c('ENA','PR'), spp = c('ASYR','ASCU'))
dev.off()
rxn.norm.plot <- function(df1, pops, spp){
df.use <- df1[df1$Species %in% spp & df1$Mon.Pop %in% pops,]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df.use,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Species, y = Concentration, group = Mon.Pop, fill = Mon.Pop))+
geom_errorbar(aes(ymin = Concentration - SE, ymax = Concentration + SE, col = Mon.Pop),
width = 0.1, size = 0.5)+
geom_point(size = 2, pch = 21)+
geom_line(size = 0.5, aes(col = Mon.Pop))+
theme_light(base_size = 8)+
scale_fill_manual(values = c('darkgreen','orange'))+
scale_color_manual(values = c('darkgreen','orange'))+
ylab('Wing Cardenolide Concentration (mg/g)')+
theme(legend.position = c(0.75, 0.9), legend.title = element_blank(),
legend.background = element_rect(fill = 'grey95', colour = 'black'))
}
pdf('./figures/Figx4.pdf', height = 4, width = 2)
rxn.norm.plot(wing.cardenolides, pops = c('ENA','PR'), spp = c('ASYR','ASCU'))
dev.off()
rxn.norm.plot <- function(df1, pops, spp){
df.use <- df1[df1$Species %in% spp & df1$Mon.Pop %in% pops,]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df.use,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Species, y = Concentration, group = Mon.Pop, fill = Mon.Pop))+
geom_errorbar(aes(ymin = Concentration - SE, ymax = Concentration + SE, col = Mon.Pop),
width = 0.1, size = 0.5)+
geom_point(size = 2, pch = 21)+
geom_line(size = 0.5, aes(col = Mon.Pop))+
theme_light(base_size = 8)+
scale_fill_manual(values = c('darkgreen','orange'))+
scale_color_manual(values = c('darkgreen','orange'))+
ylab('Wing Cardenolide Concentration (mg/g)')+
theme(legend.position = c(0.78, 0.9), legend.title = element_blank(),
legend.background = element_rect(fill = 'grey95', colour = 'black'))
}
pdf('./figures/Figx4.pdf', height = 4, width = 2)
rxn.norm.plot(wing.cardenolides, pops = c('ENA','PR'), spp = c('ASYR','ASCU'))
dev.off()
rxn.norm.plot <- function(df1, pops, spp){
df.use <- df1[df1$Species %in% spp & df1$Mon.Pop %in% pops,]
agg.data <- do.call(data.frame, aggregate(concentration ~ Mon.Pop + Species, df.use,
function(y) c(mean(y), sd(y) / sqrt(length(y)))))
names(agg.data)[3:4] <- c('Concentration', 'SE')
ggplot(agg.data, aes(x = Species, y = Concentration, group = Mon.Pop, fill = Mon.Pop))+
geom_errorbar(aes(ymin = Concentration - SE, ymax = Concentration + SE, col = Mon.Pop),
width = 0.1, size = 0.5)+
geom_point(size = 2, pch = 21)+
geom_line(size = 0.5, aes(col = Mon.Pop))+
theme_light(base_size = 8)+
scale_fill_manual(values = c('darkgreen','orange'))+
scale_color_manual(values = c('darkgreen','orange'))+
ylab('Wing Cardenolide Concentration (mg/g)')+
theme(legend.position = c(0.8, 0.9), legend.title = element_blank(),
legend.background = element_rect(fill = 'grey95', colour = 'black'))
}
pdf('./figures/Figx4.pdf', height = 4, width = 2)
rxn.norm.plot(wing.cardenolides, pops = c('ENA','PR'), spp = c('ASYR','ASCU'))
dev.off()
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))+
stat_ellipse()
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))+
stat_ellipse(aes(alpha = Tissue))+
scale_alpha_manual(values = c(0.1, 0.2))
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))+
stat_ellipse(aes(fill = Tissue))+
scale_fill_manual(values = ascl.colors)
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))+
stat_ellipse(geom = 'polygon', alpha = 0.2)
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))+
stat_ellipse(lty = 2, alpha = 0.2)
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))+
stat_ellipse(lty = 2)
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))+
stat_ellipse(geom = 'path')
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue, fill = Species))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))+
stat_ellipse()
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))+
stat_ellipse(geom = polygon)
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))+
stat_ellipse(geom = 'polygon')
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))+
stat_ellipse()
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))+
stat_ellipse(lty = Tissue)
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))+
stat_ellipse(aes(lty = Tissue))
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(1,1.4)+
guides(col = guide_legend(ncol = 2, order = 1))+
stat_ellipse(aes(lty = Tissue))
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-1,1.4)+
guides(col = guide_legend(ncol = 2, order = 1))+
stat_ellipse(aes(lty = Tissue))
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))+
stat_ellipse()
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))
citation('car')
version('car')
sequestration_ratio(cardenolides)
Anova(sequestration.model, type = 3) #does indeed indicate a highly significant monarch population x species effect, although that by itself is not indicative of local adaptation
aggregate(concentration ~ Species*mon.pop, wing.cardenolides, mean)
aggregate(concentration ~ Species*Mon.Pop, wing.cardenolides, mean)
aggregate(concentration ~ Species, wing.cardenolides[wing.cardenolides$Mon.Pop != 'PR',], mean)
3.81/0.767
6.997/1.20
(15.688-11.457) / 11.457
(7.474 - 5.119) / 5.119
7.474/5.119
15.688/11.457
0.768/3.81
3.81/0.767
summary(local.adaptation.seq.model) #intercept is based on Australian monarchs on ASCU. All species are lower than ASCU (checks out), and Puerto Rico and Guam both sequester less than Australia, according to this model. However, there is no effect of local adaptation: in fact, sequestration on sympatric host plants is actually modestly lower (this is probably due to Guam and ASCU being a sympatric combo)
.179/6.717
adonis2(~ Tissue, data = cardenolides[cardenolides$Species=='ASCU',], permutations = 999)
cardenolides$Tissue
?adonis2
names(cardenolides)
adonis2(cardenolides[,10:79] ~ Tissue, data = cardenolides[cardenolides$Species=='ASCU',], permutations = 999)
cards.dist.mat <- vegdist(cardenolides[,10:79], method = 'bray')
cards.multivariate
cards.multivariate
names(cardenolides)
cards.multivariate <- cards.multivar(cardenolides)
names(cards.multivariate)
cards.multivar <- function(x){
df1 <- x[-which(x$concentration==0),]
df2 <- df1[,11:ncol(df1)-1]
}
cards.multivariate <- cards.multivar(cardenolides)
names(cards.multivariate)
cards_nmds <- metaMDS(comm = cards.multivariate, distance = 'bray', k = 10, trymax = 20)
stressplot(cards_nmds)
cards.data.scores <- cbind(cardenolides[-which(cardenolides$concentration==0),1:9], scores(cards_nmds))
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))
cards.dist.mat <- vegdist(cards.multivariate, method = 'bray')
cards.dist.mat
names(cards.multivariate)
adonis2(cards.dist.mat ~ Tissue, data = cardenolides[cardenolides$Species=='ASCU',], permutations = 999)
cardenolides[-which(rowSums(cardenolides[,10:79]) == 0),]
darp <- cardenolides[-which(rowSums(cardenolides[,10:79]) == 0),]
adonis2(cards.dist.mat ~ Tissue, data = darp[darp$Species=='ASCU',], permutations = 999)
nrow(cards.multivariate)
nrow(darp)
names(darp)
cards.dist.mat <- vegdist(darp[,10:79], method = 'bray')
adonis2(cards.dist.mat ~ Tissue, data = darp[darp$Species=='ASCU',], permutations = 999)
nrow(cards.dist.mat)
str(cards.dist.mat)
adonis2(cards.dist.mat ~ Tissue, data = darp, permutations = 999)
larp <- darp[darp$Species=='ASCU',]
cards.dist.mat <- vegdist(larp[,10:79], method = 'bray')
adonis2(cards.dist.mat ~ Tissue, data = larp, permutations = 999)
larp <- darp[darp$Species=='AINC',]
cards.dist.mat <- vegdist(larp[,10:79], method = 'bray')
adonis2(cards.dist.mat ~ Tissue, data = larp, permutations = 999)
larp <- darp[darp$Species=='ASFA',]
cards.dist.mat <- vegdist(larp[,10:79], method = 'bray')
adonis2(cards.dist.mat ~ Tissue, data = larp, permutations = 999)
larp <- darp[darp$Species=='ASYR',]
cards.dist.mat <- vegdist(larp[,10:79], method = 'bray')
adonis2(cards.dist.mat ~ Tissue, data = larp, permutations = 999)
larp <- darp[darp$Species=='ASPEC',]
cards.dist.mat <- vegdist(larp[,10:79], method = 'bray')
adonis2(cards.dist.mat ~ Tissue, data = larp, permutations = 999)
larp <- darp[darp$Species=='GOPH',]
cards.dist.mat <- vegdist(larp[,10:79], method = 'bray')
adonis2(cards.dist.mat ~ Tissue, data = larp, permutations = 999)
#### Script for analyzing cardenolide data
library(ggplot2)
library(dplyr)
library(vegan)
library(plotly)
library(lme4)
library(lmerTest)
library(emmeans)
library(car)
library(multcomp)
library(stringr)
setwd('~/Documents/GitHub/Sites/manuscripts/Cardenolide_Sequestration/')
raw_data <- read.csv('./data/concatenated_cardenolides.csv') #read in data. *note that negative values have already been replaced with 0s in this dataframe
str(raw_data)
#Description of columns:
#Year = year in which samples were run on the HPLC (2018 vs. 2019)
#Plate = identity of the 96-well plate that sample was included in. This shouldn't matter unless there are systematic issues with loss of column integrity over the course of sampling.
#Injection = index value for the order in which samples were injected
#Sample = ID of the tissue being analyzed
#Species = self-explanatory
#Tissue = leaf or wing; also includes entries that say standard, which correspond to runs where only the internal standard was injected
#Position = position within a given plate. Not actually imoportant.
#Digitoxin = integrated peak area of the internal standard, digitoxin
#X0.487 denotes the first peak, which had an RT of 0.487 minutes. All of the subsequent columns use the same naming system.
#First operation: subtract away background that is present in internal standard only samples. Take the mean value for each column from the varioius standard samples, and then subtract this from the rest of the dataframe. Replace any negative values with 0. Then, finally divide each row by its corresponding standard concentration.
subtract_baseline <- function(dfx) {
standard.means <- colSums(dfx[dfx$Tissue == 'Standard', 9:ncol(dfx)], na.rm = T) /
nrow(dfx[dfx$Tissue=='Standard',])
dfx2 <- sweep(dfx[,9:ncol(dfx)], 2, standard.means)
dfx2[dfx2 < 0] <- 0
dfx3 <- cbind(dfx[,1:8], dfx2)
}
cardenolides <- subtract_baseline(raw_data)
#Next operation: need to merge this dataframe with a separate dataframe containing the corresponding mass of the tissue sampled. Then, use this to adjust and get a concentration.
masses <- read.csv('./data/tissue_mass.csv') #read in data corresponding to the mass of the tissue sampled
str(masses) #merge based on "Sample" column, which has the same indexing in the cardenolides dataframe
cardenolides <- merge(masses[,c(1,4)], cardenolides, by = 'Sample')
#Next operation: get a cumulative cardenolide value, adjusted for tissue mass and internal standard concentration, for each sample. Here, the conversion is based on the IS concentration of 15 mg digitoxin / 100 mL. Then, for each sample, 0.8 mL out of the original 1 mL of extract was vacuum evaporated, so need a factor of 0.8 in there as well. Lastly, divide by the tissue mass/1000 to get cardenolides (mg/g), and add a column for cumulative concentration.
standardize_cards <- function(x){
std_vals <- (cardenolides[,10:ncol(cardenolides)] / cardenolides$Digitoxin) * 0.8 * 0.15 /
(cardenolides$Mass/1000)
std_vals$concentration <- rowSums(std_vals)
full_data <- cbind(cardenolides[,1:9], std_vals)
}
cardenolides <- standardize_cards(cardenolides) #These values correspond to cardenolides (per unit of 0.15 mg digitoxin / g tissue)
cardenolides <- cardenolides[-which(is.na(cardenolides$concentration)),] #drop the one row where the concentration of internal standard wasn't recorded, thereby producing NAs across rows
#################
#Figure out sequestration ratio: divide the average sequestered concentration for wings by the average leaf concentration. Aggregate based on species and tissue, and get both mean and standard errors.
sequestration_ratio <- function(x){
wing_means <- do.call(data.frame, aggregate(concentration ~ Species + Tissue,
function(y) c(mean(y), sd(y) / sqrt(length(y))), data = x))
names(wing_means)[3:4] <- c('mean','SE')
ratio <- wing_means[wing_means$Tissue == 'Wing',]$mean / wing_means[wing_means$Tissue == 'Leaf',]$mean
ratio.table <- data.frame(cbind(levels(factor(x$Species)), ratio))
names(ratio.table)[1] <- 'Species'
output <- list(wing_means, ratio.table)
print(output)
}
sequestration_ratio(cardenolides)
######
#Plot raw concentrations
#first, rearrange milkweed species according to phylogenetic position
cardenolides$Species <- factor(cardenolides$Species, c('GOPH','ASCU','AINC','ASFA','ASYR','ASPEC'))
#make vector of colors for plotting
ascl.colors <- c('blue','purple','coral','gold','dodgerblue','turquoise')
#pdf('./figures/Figx2.pdf', height = 8, width = 5)
ggplot(cardenolides, aes(x = Tissue, y = concentration, fill = Species))+
geom_boxplot(outlier.color = 'white', alpha = 0.3)+
geom_point(position = position_jitterdodge(1), pch = 21)+
scale_fill_manual(values = ascl.colors)+
facet_wrap(~Species, ncol = 2, scales = 'free')+
theme_light(base_size = 16)+
theme(legend.position = 'none')+
ylab('Cardenolide Concentration (mg/g)')
#dev.off()
#######
#Multivariate analysis of disparity in leaf and wing samples
#First, analyze concurrently. Need to drop all rows with cumulative values of 0. Also need to specify only numeric columns, not including the final concentration column
cards.multivar <- function(x){
df1 <- x[-which(x$concentration==0),]
df2 <- df1[,10:ncol(df1)-1]
}
cards.multivariate <- cards.multivar(cardenolides)
cards_nmds <- metaMDS(comm = cards.multivariate, distance = 'bray', k = 10, trymax = 20)
stressplot(cards_nmds)
cards.data.scores <- cbind(cardenolides[-which(cardenolides$concentration==0),1:9], scores(cards_nmds))
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))
#dev.off()
plot_ly(cards.data.scores[cards.data.scores$Tissue=='Wing',], x = ~NMDS1, y = ~NMDS2, z = ~NMDS3, color = ~Species, colors = ascl.colors) #3d version of the same figure, but only showing points for wings. Might have issues trying to run with R versions < 4.0.0
#####
#Within each milkweed species, test for whether leaf and wing cardenolide composition is different
darp <- cardenolides[-which(rowSums(cardenolides[,10:79]) == 0),]
larp <- darp[darp$Species=='GOPH',]
cards.dist.mat <- vegdist(larp[,10:79], method = 'bray')
adonis2(cards.dist.mat ~ Tissue, data = larp, permutations = 999)
#ASCU: F = 57.2
#AINC: F = 15.1
#ASFA: F = 20.1
#ASYR: F = 27.0
#ASPEC: F = 9.5
#GOPH: F = 103.5
#pdf('./figures/Figx3.pdf', height = 8, width = 8)
ggplot(cards.data.scores, aes(x = NMDS1, y = NMDS2, col = Species, shape = Tissue))+
geom_point(size = 2)+
scale_shape_manual(values = c(15,19))+
scale_color_manual(values = ascl.colors)+
theme_light(base_size = 16)+
theme(legend.position = c(0.2, 0.77), legend.background = element_rect(fill = 'grey95', color = 'black'),
legend.title.align = 0.5, legend.title = element_text(face = 'bold'))+
ylim(-0.8,1.2)+
guides(col = guide_legend(ncol = 2, order = 1))
flockhart.data <- read.csv('~/Downloads/40462_2017_98_MOESM2_ESM.csv',header = T)
head(flockhart.data)
mean(flockhart.data$dist.centroid.km)
sd(flockhart.data$dist.centroid.km) / sqrt(length(flockhart.data$dist.centroid.km))
sd(flockhart.data$dist.centroid.km)
install.packages('simrad')
install.packages('SimRAD')
install.packages('Biostrings')
library(SimRAD)
install.packages('Bioconductor')
install.packages("remotes")
library(remotes)
install_github("pjhanly/iNatTools")
library(iNatTools)
