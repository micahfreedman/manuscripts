enz.recogs = c("GGATCC", "TTAA"),
enz.names = c("bam",  "mse"),
enz.r2 = "bam")
altb.2 <- do.3rad(seq,
enz.recogs = c("GAATTC", "CCGG"),
enz.names = c("eco", "msp"),
enz.r2 = "eco")
library(viridis)
colors <- magma(7)
layout(matrix(data = 1:8, nrow = 4, ncol = 2, byrow = F))
par(mar = c(4,4,1,1))
hist(ori.3[[1]],
xlim = c(0,10000),
breaks = seq(0,1.2*max(ori.3[[1]]),10),
col = colors[1],
border = NA,
xlab = "size",
main = "original (BamHI + MspI + ClaI)")
for (i in 2:6) {
hist(ori.3[[i]],
breaks = seq(0,1.2*max(ori.3[[1]]),10),
col = colors[i],
border  = NA,
add = T)
}
legend("topright",
c("ligation",
"cleanup2",
"PCR1",
"beadclean2",
"PCR2",
"beadclean3"),
col = colors[1:6],
pch = 15,
bty = "n",
cex = .75,
)
hist(tim.3[[1]],
xlim = c(0,10000),
breaks = seq(0,1.2*max(tim.3[[1]]),10),
col = colors[1],
border = NA,
xlab = "size",
main = "Tim (EcoRI + MseI + CviQI)")
for (i in 2:6) {
hist(tim.3[[i]],
breaks = seq(0,1.2*max(tim.3[[1]]),10),
col = colors[i],
border  = NA,
add = T)
}
hist(alta.3[[1]],
xlim = c(0,10000),
breaks = seq(0,1.2*max(alta.3[[1]]),10),
col = colors[1],
border = NA,
xlab = "size",
main = "AltA (BamHI + MseI + CviQI)")
for (i in 2:6) {
hist(alta.3[[i]],
breaks = seq(0,1.2*max(alta.3[[1]]),10),
col = colors[i],
border  = NA,
add = T)
}
hist(altb.3[[1]],
xlim = c(0,10000),
breaks = seq(0,1.2*max(altb.3[[1]]),10),
col = colors[1],
border = NA,
xlab = "size",
main = "AltB (EcoRI + MspI + ClaI)")
for (i in 2:6) {
hist(altb.3[[i]],
breaks = seq(0,1.2*max(altb.3[[1]]),10),
col = colors[i],
border  = NA,
add = T)
}
# now the two-enzyme version
hist(ori.2[[1]],
xlim = c(0,10000),
breaks = seq(0,1.2*max(ori.2[[1]]),10),
col = colors[1],
border = NA,
xlab = "size",
main = "original (BamHI + MspI)")
for (i in 2:6) {
hist(ori.2[[i]],
breaks = seq(0,1.2*max(ori.2[[1]]),10),
col = colors[i],
border  = NA,
add = T)
}
legend("topright",
c("ligation",
"cleanup2",
"PCR1",
"beadclean2",
"PCR2",
"beadclean3"),
col = colors[1:6],
pch = 15,
bty = "n",
cex = .75,
)
hist(tim.2[[1]],
xlim = c(0,10000),
breaks = seq(0,1.2*max(tim.2[[1]]),10),
col = colors[1],
border = NA,
xlab = "size",
main = "Tim (EcoRI + MseI)")
for (i in 2:6) {
hist(tim.2[[i]],
breaks = seq(0,1.2*max(tim.2[[1]]),10),
col = colors[i],
border  = NA,
add = T)
}
hist(alta.2[[1]],
xlim = c(0,10000),
breaks = seq(0,1.2*max(alta.2[[1]]),10),
col = colors[1],
border = NA,
xlab = "size",
main = "AltA (BamHI + MseI)")
for (i in 2:6) {
hist(alta.2[[i]],
breaks = seq(0,1.2*max(alta.2[[1]]),10),
col = colors[i],
border  = NA,
add = T)
}
hist(altb.2[[1]],
xlim = c(0,10000),
breaks = seq(0,1.2*max(altb.2[[1]]),10),
col = colors[1],
border = NA,
xlab = "size",
main = "AltB (EcoRI + MspI)")
for (i in 2:6) {
hist(altb.2[[i]],
breaks = seq(0,1.2*max(altb.2[[1]]),10),
col = colors[i],
border  = NA,
add = T)
}
# Note the different y axes for all plots!
library(viridis)
colors <- magma(7)
layout(matrix(data = 1:8, nrow = 4, ncol = 2, byrow = F))
par(mar = c(4,4,1,1))
hist(ori.3[[1]],
xlim = c(0,600),
breaks = seq(0,1.2*max(ori.3[[1]]),10),
col = colors[1],
border = NA,
xlab = "size",
main = "original (BamHI + MspI + ClaI)")
for (i in 2:6) {
hist(ori.3[[i]],
breaks = seq(0,1.2*max(ori.3[[1]]),10),
col = colors[i],
border  = NA,
add = T)
}
legend("topleft",
c("ligation",
"cleanup2",
"PCR1",
"beadclean2",
"PCR2",
"beadclean3"),
col = colors[1:6],
pch = 15,
bty = "n",
cex = .75,
)
hist(tim.3[[1]],
xlim = c(0,600),
breaks = seq(0,1.2*max(tim.3[[1]]),10),
col = colors[1],
border = NA,
xlab = "size",
main = "Tim (EcoRI + MseI + CviQI)")
for (i in 2:6) {
hist(tim.3[[i]],
breaks = seq(0,1.2*max(tim.3[[1]]),10),
col = colors[i],
border  = NA,
add = T)
}
hist(alta.3[[1]],
xlim = c(0,600),
breaks = seq(0,1.2*max(alta.3[[1]]),10),
col = colors[1],
border = NA,
xlab = "size",
main = "AltA (BamHI + MseI + CviQI)")
for (i in 2:6) {
hist(alta.3[[i]],
breaks = seq(0,1.2*max(alta.3[[1]]),10),
col = colors[i],
border  = NA,
add = T)
}
hist(altb.3[[1]],
xlim = c(0,600),
breaks = seq(0,1.2*max(altb.3[[1]]),10),
col = colors[1],
border = NA,
xlab = "size",
main = "AltB (EcoRI + MspI + ClaI)")
for (i in 2:6) {
hist(altb.3[[i]],
breaks = seq(0,1.2*max(altb.3[[1]]),10),
col = colors[i],
border  = NA,
add = T)
}
# now the two-enzyme version
hist(ori.2[[1]],
xlim = c(0,600),
breaks = seq(0,1.2*max(ori.2[[1]]),10),
col = colors[1],
border = NA,
xlab = "size",
main = "original (BamHI + MspI)")
for (i in 2:6) {
hist(ori.2[[i]],
breaks = seq(0,1.2*max(ori.2[[1]]),10),
col = colors[i],
border  = NA,
add = T)
}
legend("topleft",
c("ligation",
"cleanup2",
"PCR1",
"beadclean2",
"PCR2",
"beadclean3"),
col = colors[1:6],
pch = 15,
bty = "n",
cex = .75,
)
hist(tim.2[[1]],
xlim = c(0,600),
breaks = seq(0,1.2*max(tim.2[[1]]),10),
col = colors[1],
border = NA,
xlab = "size",
main = "Tim (EcoRI + MseI)")
for (i in 2:6) {
hist(tim.2[[i]],
breaks = seq(0,1.2*max(tim.2[[1]]),10),
col = colors[i],
border  = NA,
add = T)
}
hist(alta.2[[1]],
xlim = c(0,600),
breaks = seq(0,1.2*max(alta.2[[1]]),10),
col = colors[1],
border = NA,
xlab = "size",
main = "AltA (BamHI + MseI)")
for (i in 2:6) {
hist(alta.2[[i]],
breaks = seq(0,1.2*max(alta.2[[1]]),10),
col = colors[i],
border  = NA,
add = T)
}
hist(altb.2[[1]],
xlim = c(0,600),
breaks = seq(0,1.2*max(altb.2[[1]]),10),
col = colors[1],
border = NA,
xlab = "size",
main = "AltB (EcoRI + MspI)")
for (i in 2:6) {
hist(altb.2[[i]],
breaks = seq(0,1.2*max(altb.2[[1]]),10),
col = colors[i],
border  = NA,
add = T)
}
#### compare final distributions and size-selected loci of alternative designs ####
layout(matrix(data = 1:8, nrow = 4, ncol = 2, byrow = F))
par(mar = c(4,4,1,1))
plot.ss(ori.3$clean3,
col = "dodgerblue",
main = "original (BamHI + MspI + ClaI)",
low = 325,
high = 550,
prop = 0.5,
xlim = c(0,750))
plot.ss(tim.3$clean3,
col = "gold2",
main = "Tim (EcoRI + MseI + CviQI)",
low = 325,
high = 550,
prop = 0.5,
xlim = c(0,750))
plot.ss(alta.3$clean3,
col = "orange2",
main = "AltA (BamHI + MseI + CviQI)",
low = 325,
high = 550,
prop = 0.5,
xlim = c(0,750))
plot.ss(altb.3$clean3,
col = "purple",
main = "AltB (EcoRI + MspI + ClaI)",
low = 325,
high = 550,
prop = 0.5,
xlim = c(0,750))
plot.ss(ori.2$clean3,
col = "dodgerblue",
main = "original (BamHI + MspI)",
low = 325,
high = 550,
prop = 0.5,
xlim = c(0,750))
plot.ss(tim.2$clean3,
col = "gold2",
main = "Tim (EcoRI + MseI)",
low = 325,
high = 550,
prop = 0.5,
xlim = c(0,750))
plot.ss(alta.2$clean3,
col = "orange2",
main = "AltA (BamHI + MseI)",
low = 325,
high = 550,
prop = 0.5,
xlim = c(0,750))
plot.ss(altb.2$clean3,
col = "purple",
main = "AltB (EcoRI + MspI)",
low = 325,
high = 550,
prop = 0.5,
xlim = c(0,750))
plot.ss(mf.ries$clean3,
col = "green",
main = "AltB (PstI + MspI)",
low = 325,
high = 550,
prop = 0.5,
xlim = c(0,750))
plot.ss(mf.ries$clean3,
col = "green",
main = "Rieseberg Lab (PstI + MspI)",
low = 300,
high = 550,
prop = 0.5,
xlim = c(0,750))
dev.off()
par(mar = c(1,1))
plot.ss(mf.ries$clean3,
col = "green",
main = "Rieseberg Lab (PstI + MspI)",
low = 300,
high = 550,
prop = 0.5,
xlim = c(0,750))
plot.ss(mf.ries$clean3,
col = "darkgreen",
main = "Rieseberg Lab (PstI + MspI)",
low = 300,
high = 550,
prop = 0.5,
xlim = c(0,750))
mf.ries$clean3
length(mf.ries$clean3 > 300 & mf.ries$clean3 < 550)
length(mf.ries$clean3 > 350 & mf.ries$clean3 < 550)
which(mf.ries$clean3 < 550)
which(mf.ries$clean3 < 550 & mf.ries$clean3 > 325)
length(which(mf.ries$clean3 < 550 & mf.ries$clean3 > 325))
plot.ss(mf.ries$clean3,
col = "darkgreen",
main = "Rieseberg Lab (PstI + MspI)",
low = 325,
high = 550,
prop = 0.5,
xlim = c(0,750))
plot.ss(altb.2$clean3,
col = "purple",
main = "AltB (EcoRI + MspI)",
low = 325,
high = 550,
prop = 0.5,
xlim = c(0,750))
plot.ss(mf.ries$clean3,
col = "darkgreen",
main = "Rieseberg Lab (PstI + MspI)",
low = 325,
high = 550,
prop = 0.5,
xlim = c(0,750))
plot.ss(tim.2$clean3,
col = "gold2",
main = "Tim (EcoRI + MseI)",
low = 325,
high = 550,
prop = 0.5,
xlim = c(0,750))
plot.ss(ori.3$clean3,
col = "dodgerblue",
main = "original (BamHI + MspI + ClaI)",
low = 325,
high = 550,
prop = 0.5,
xlim = c(0,750))
mf.ries <- do.3rad(seq,
enz.recogs = c("CTGCAG","GTAC"),
enz.names = c("pst",'cvi'),
enz.r2 = "cvi")
plot.ss(mf.ries$clean3,
col = "darkgreen",
main = "Rieseberg Lab (PstI + CviQI)",
low = 325,
high = 550,
prop = 0.5,
xlim = c(0,750))
length(which(mf.ries$clean3 < 550 & mf.ries$clean3 > 325))
plot.ss(mf.ries$clean3,
col = "darkgreen",
main = "Micah's Combo (PstI + CviQI)",
low = 325,
high = 550,
prop = 0.5,
xlim = c(0,750))
#### Statistical analysis for local adaptation experiment
#load all libraries
library(lme4)
library(car)
library(sjPlot)
library(ggplot2)
library(lmerTest)
library(car)
library(plyr)
library(multcomp)
library(sjstats)
library(cvequality)
library(MuMIn)
library(emmeans)
library(lemon)
#load data
setwd('~/Documents/grad_school/Manuscripts/Monarch local adaptation/Final_submission/Analysis_and_data/')
setwd()
setwd('~/Documents/GitHub/Sites/manuscripts/Freedman et al. 2020 - Evolution/Final_submission/Analysis_and_data/')
lad <- read.csv("./larval_data.csv")
head(lad)
str(lad)
lad$Mon.Pop <- factor(lad$Mon.Pop)
lad$Mon.Pop <- factor(lad$Mon.Pop, levels(lad$Mon.Pop)[c(4,5,2,3,1,6)]) #rearrange factor levels for monarch population
lad[,c('Year','Usage','Plant.ID')] <- lapply(lad[,c('Year','Usage','Plant.ID')], factor)
lad$Species <- factor(gsub('GOFR', 'GOPH', lad$Species))
lad$sym.allo <- with(lad, ifelse(Species %in% c('AINC','ASYR') & Mon.Pop == 'ENA', 'sympatric',
ifelse(Species %in% c('ASPEC','ASFA') & Mon.Pop == 'CA', 'sympatric',
ifelse(Species == 'GOPH' & Mon.Pop %in% c('AU','HI'), 'sympatric',
ifelse(Species == 'ASCU' & Mon.Pop %in% c('GU','PR'), 'sympatric',
'allopatric')))))
lad$Mon.ID <- with(lad, paste(Mon.Pop, ID, Year, sep = '-'))
lad$reps <- with(lad, paste(Species, Plant.ID, Mon.ID, sep = "-"))
length(unique(lad$reps)) #828 unique combinations
larvae <- aggregate(Caterpillar.. ~ reps, FUN = max, lad) #how many caterpillars within each of these replicates?
colnames(larvae)[2] <- 'Larvae'
lad <- merge(lad, larvae, by = "reps")
lad$Larvae <- as.numeric(lad$Larvae)
lad$Larvae <- ifelse(lad$Larvae > 5, 5, lad$Larvae) #replace the three entries with >5 larvae as 5, just for the sake of treating larvae as a continuous variable
table(lad$Larvae) #vast majority of replicates come from plants that had 5 larvae added initially
dates <- as.Date(lad$Date, format='%m/%d/%Y') ## create vector of dates used in experiment
start_date = as.Date('2018-05-15', tz="UTC") #define earliest date on which caterpillars were added to plants (May 15)
lad$exp.days <- as.numeric(difftime(dates, start_date , units = "days")) ###create new variable (exp.days) that defines how many days after the start of the experiment a particular replicate was used. This term is also a stand-in for plant age and the photoperiod that larvae were experiencing during their development.
mon.pop.cols <- c('blue','cornflowerblue','purple','forestgreen','orange','hotpink')
lad$Mon.Pop <- factor(lad$Mon.Pop, c('AU','HI','GU','ENA','CA','PR'))
FigS1a <- ggplot(lad, aes(x = exp.days))+
geom_histogram(bins = 40, fill = 'black')+
theme_bw()+
theme(strip.text = element_text(size = 16), axis.text = element_text(size = 12),
axis.title = element_text(size = 16))+
xlab('Days Since May 15th')+
ylab('Number of Larvae Measured')
FigS1a ### the majority of rearing occurred in the period 60-150 days after the onset of the experiment (May 15th), which corresponds to July-September
FigS1b <- ggplot(lad, aes(x = exp.days, fill = Mon.Pop))+
geom_histogram(bins = 40)+
facet_wrap(~Mon.Pop*Year, nrow = 2)+
theme_bw()+
scale_fill_manual(values = mon.pop.cols, guide = F)+
theme(strip.text = element_text(size = 16), axis.text = element_text(size = 12),
axis.title = element_text(size = 16))+
xlab('Days Since May 15th')+
ylab('Number of Larvae Measured')
FigS1b
lad$ancestral_pop <- ifelse(lad$Mon.Pop %in% c('ENA','CA'), 'ancestral', 'derived') ##define whether monarch populations are ancestral or derived
hist(lad$Weight, breaks=100) #long right hand tail, with bimodal peaks that probably correspond to discrete larval instars
hist(log(lad$Weight), breaks = 100) #log transformation produces a distribution that is less skewed, though still not totally normally distributed
model4.cat.growth <- lmer((log(Weight)) ~ Species + Mon.Pop + sym.allo + (1|Pop/Plant.ID) + (1|Mon.ID)  + (1|Group)  + Usage + GH + scale(exp.days) + Year, data = lad)
summary(model4.cat.growth)
r.squaredGLMM(model4.cat.growth) #fixed effects alone explain about 30% of variance; adding random factors explains another 36% or so
hist(resid(model4.cat.growth), breaks = 100) # histogram of model residuals; looks good, though perhaps with a slightly long left hand tail
Anova(model4.cat.growth) #can use default type II ANOVA since there are no interaction terms
summary(model4.cat.growth)
pop.comparison <- glht(model4.cat.growth, mcp(Mon.Pop="Tukey"))
