theme(legend.position = c(0.8,0.2))
common.gardens <- leaf.data[leaf.data$Site %in% c('RSA','SBBG'),] #759 observations
with(aggregate(True_area ~ plant.ID + Species + Source, mean, data = common.gardens)
, table(Species, Source)) #shows the numbers of plants measured from common gardens, separated by their original place of collection. Noteworthy: no plants from Santa Rosa included in common garden sampling design, and lots of mainland locations that weren't part of original sampling scheme.
with(aggregate(True_area ~ plant.ID + Species + Source.IM, mean, data = common.gardens)
, table(Species, Source.IM))
model_leaf_area_common_garden <- lmer(log(True_area) ~ Source.IM*Species + Position + Site + (1|plant.ID/branch.ID) + scale(Aspect.E) + scale(Aspect.N), data = common.gardens) #note: this model does not include a term for the plant's provenance, since there are 13 levels (many of which only have 1 or 2 observations); instead, provenances are pooled into island versus mainland (the Source.IM term).
summary(model_leaf_area_common_garden)
(leaf_area_cg_model_output <- data.frame(predict_response(model = model_leaf_area_common_garden, terms = c("Source.IM", "Species"), type = "random", back_transform = T, interval = "confidence")))
emm.leaf.area.spp.common.garden <- emmeans(model_leaf_area_common_garden, specs = ~ Source.IM + Species, type = "response") #get estimated marginal means for each species
emm.leaf.area.spp.common.garden.contrasts <- contrast(object = emm.leaf.area.spp.common.garden, method = "pairwise", by = "Species") #generates all species-level contrasts of interest
emm.leaf.area.spp.common.garden.contrasts
emm.leaf.area.spp.common.garden
emm.leaf.area.spp
plot.emm.leaf.area.spp.common.garden <- data.frame(emmeans(model_leaf_area_common_garden, specs = pairwise ~ Source.IM + Species, type = "response")[[1]]) #generate data frame for plotting
(figS2a <- ggplot(data = plot.emm.leaf.area.spp.common.garden, aes(x = Source.IM, y = response, col = Source.IM))+
geom_point(size = 4)+
theme_bw(base_size = 16)+
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL, col = Source.IM), width = 0.2, size = 1)+
facet_wrap(~Species, scales = "free_y", nrow = 1)+
scale_color_manual(values = c('blue','red'))+
labs(y = expression ('Leaf Area'~(cm^2)))+
theme(legend.position = 'bottom', legend.title = element_blank())+
theme(axis.title.x = element_blank(), axis.text.x = element_blank())+
theme(strip.text = element_text(face = "italic", size = 16)))
cg.leaf.data <- leaf.data[leaf.data$Site %in% c('SBBG','RSA'),]
(leaf.area.cg.agg = aggregate( True_area ~ Species + Source.IM + Site + plant.ID, data = cg.leaf.data, FUN = mean))
#pdf('./figures/Supplemental_Figures/FigS8A.pdf', height = 4, width = 10)
figS2a+
geom_point(data = leaf.area.cg.agg, aes(x = Source.IM, y = True_area, fill = Source.IM),
size = 2, alpha = 0.2, pch = 21,
position = position_jitterdodge(0.5))+
scale_fill_manual(values = c('blue','red'))
masses <- read.csv(file = './data_files/shrub_leaf_masses.csv', head = T)
for( i in 1:nrow(masses)){
masses$SLA.ID[i] <- paste(masses$Species[i], masses$Number[i], masses$Position[i], sep = "_")
}
for( i in 1:nrow(leaf.data))
leaf.data$SLA.ID[i] = paste(leaf.data$plant.ID[i], leaf.data$Position[i], sep="_")
leaf.data$SLA.ID #looks right
sla.dataframe <- merge(masses[,4:5], leaf.data, by = "SLA.ID")
sla.dataframe$SLA <- sla.dataframe$True_area / sla.dataframe$Mass #create new column for SLA (leaf area divided by tissue mass)
hist(sla.dataframe$SLA) #consider removing values above 25
sla.model <- aggregate(SLA ~ plant.ID + Position + IM + Site + Species + Aspect.N + Aspect.E + Elevation_scaled + Stem_Area_scaled, sla.dataframe[sla.dataframe$SLA < 20,], mean) #need to use aggregate before passing  to model, since for SLA, mass measurements were at the level of branches (sets of leaves) rather than individual leaves
model_specific_leaf_area = lmer(SLA ~ IM*Species + Position + (1|Site/plant.ID) + scale(Aspect.N) + scale(Aspect.E), data = sla.model)
summary(model_specific_leaf_area) #Conclusions: somewhat significant difference between island and mainland. Leaves that come from the upper canopy, which are less susceptible to self-shading and have more direct sun exposure, are significantly thicker. Leaves from north facing and west facing slopes tend to be thinner.
anova(model_specific_leaf_area)
emm.sla.spp <- emmeans(model_specific_leaf_area, specs = ~ IM + Species, type = "response") #get estimated marginal means for each species
emm.sla.spp.contrasts <- contrast(object = emm.sla.spp, method = "pairwise", by = "Species") #generates all species-level contrasts of interest
emm.sla.spp.contrasts
emm.sla.spp
(fig2b <- ggplot(data = plot.emm.sla.spp, aes(x = IM, y = emmean, col = IM))+
geom_point(size = 4)+
theme_bw(base_size = 16)+
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL, col = IM), width = 0.2, size = 1)+
facet_wrap(~Species, scales = "free_y", nrow = 1)+
scale_color_manual(values = c('blue','red'))+
labs(y = expression ('SLA'~(cm^2/g)))+
theme(legend.position = 'bottom', legend.title = element_blank())+
theme(axis.title.x = element_blank(), axis.text.x = element_blank())+
theme(strip.text = element_text(face = "italic", size = 16)))
plot.emm.sla.spp <- data.frame(emmeans(model_specific_leaf_area, specs = pairwise ~ IM + Species, type = "response")[[1]]) #generate data frame for plotting
(fig2b <- ggplot(data = plot.emm.sla.spp, aes(x = IM, y = emmean, col = IM))+
geom_point(size = 4)+
theme_bw(base_size = 16)+
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL, col = IM), width = 0.2, size = 1)+
facet_wrap(~Species, scales = "free_y", nrow = 1)+
scale_color_manual(values = c('blue','red'))+
labs(y = expression ('SLA'~(cm^2/g)))+
theme(legend.position = 'bottom', legend.title = element_blank())+
theme(axis.title.x = element_blank(), axis.text.x = element_blank())+
theme(strip.text = element_text(face = "italic", size = 16)))
sla.agg <- aggregate(SLA ~ Species + IM + Site + plant.ID, data = sla.dataframe, mean) #now aggregate again, but this time ignore canopy position for the sake of plotting
#pdf('./figures/Fig2b.pdf', height = 4, width = 10)
fig2b+
geom_point(data = sla.agg[sla.agg$SLA < 20,], aes(x = IM, y = SLA, fill = IM), size = 2, alpha = 0.2, pch = 21,
position = position_jitterdodge(0.5))+
scale_fill_manual(values = c('blue','red')) #note that two high outlier values for Cercocarpus are truncated
#pdf('./figures/Supplemental_Figures/FigS7B.pdf', height = 8, width = 8)
ggplot(sla.agg[sla.agg$SLA < 20,], aes(x=Site, y=SLA))+
geom_boxplot(aes(fill=IM), alpha = 0.3, outlier.color = 'white')+
geom_point(aes(fill=IM), position = position_jitterdodge(0.5), pch = 21, size = 3, alpha = 0.5)+
facet_wrap(~Species, nrow = 2, scales = 'free')+
theme_bw()+
labs(y = expression ('Specific Leaf Area'~(cm^2/g)))+
scale_fill_manual(values = c('blue','red'))+
scale_color_manual(values = c('blue','red'))+
theme(axis.text.x = element_text(size=12, angle=60,hjust=1), axis.text.y = element_text(size =12))+
theme(legend.title=element_blank(),legend.text=element_text(size=14),
axis.title.y = element_text(size = 16))+
theme(axis.title.x = element_blank())+
theme(strip.text = element_text(size=16, face = 'italic'))+
theme(legend.position = c(0.8,0.2))
leaf.data$spines
spine.data <- leaf.data[leaf.data$Species %in% c('Prunus','Heteromeles'),]
hist(spine.data$spines)
spine.data.model <- spine.data[!spine.data$Site %in% c('RSA','SBBG'),]
model_leaf_spines = lmer(spines ~ IM*Position + IM*Species + (1|Site/plant.ID/branch.ID) + scale(Aspect.N) + scale(Aspect.E), data = spine.data.model) #
summary(model_leaf_spines) #Conclusion: mainland plants are not significantly more spiny overall. Leaves from the upper canopy are less spiny (spinescence heteroblasty), but this pattern is more pronounced on the mainland.
emm.spines.spp <- emmeans(model_leaf_spines, specs = ~ IM + Species, type = "response") #get estimated marginal means for each species
emm.spines.spp.contrast <- contrast(object = emm.spines.spp, method = "pairwise", by = "Species") #generates all species-level contrasts of interest
plot.emm.spines <- data.frame(emmeans(model_leaf_spines, specs = pairwise ~ IM + Species, type = "response")[[1]]) #generate data frame for plotting
(fig2c <- ggplot(data = plot.emm.spines, aes(x = IM, y = emmean, col = IM))+
geom_point(size = 4)+
theme_bw(base_size = 16)+
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL, col = IM), width = 0.2, size = 1)+
facet_wrap(~Species, scales = "free_y", nrow = 1)+
scale_color_manual(values = c('blue','red'))+
ylab('Spinescence (%)')+
theme(legend.position = 'bottom', legend.title = element_blank())+
theme(axis.title.x = element_blank(), axis.text.x = element_blank())+
theme(strip.text = element_text(face = "italic", size = 16)))
spines.agg <- aggregate(spines ~ Species + Site + IM + plant.ID, data = spine.data.model, mean)
emm.spines.spp.contrast
emm.spines.spp
(fig2c <- ggplot(data = plot.emm.spines, aes(x = IM, y = emmean, col = IM))+
geom_point(size = 4)+
theme_bw(base_size = 16)+
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL, col = IM), width = 0.2, size = 1)+
facet_wrap(~Species, scales = "free_y", nrow = 1)+
scale_color_manual(values = c('blue','red'))+
ylab('Spinescence (%)')+
theme(legend.position = 'bottom', legend.title = element_blank())+
theme(axis.title.x = element_blank(), axis.text.x = element_blank())+
theme(strip.text = element_text(face = "italic", size = 16)))
spines.agg <- aggregate(spines ~ Species + Site + IM + plant.ID, data = spine.data.model, mean)
#pdf('./figures/Fig2c.pdf', height = 4, width = 4)
fig2c+
geom_point(data = spines.agg, aes(x = IM, y = spines, fill = IM), size = 2, alpha = 0.2, pch = 21,
position = position_jitterdodge(0.5))+
scale_fill_manual(values = c('blue','red'))
#pdf('./figures/Supplemental_Figures/FigS7C.pdf', height = 6, width = 5)
ggplot(spines.agg, aes(x=Site, y=spines))+
geom_boxplot(aes(fill=IM), outlier.color = 'white', alpha = 0.3)+
geom_point(aes(fill=IM), position = position_jitterdodge(0.5), pch = 21, size = 3, alpha = 0.5)+
facet_wrap(~Species, nrow = 1, scales = 'free')+
theme_bw()+
ylab('Spinescence')+
scale_fill_manual(values = c('blue','red'))+
scale_color_manual(values = c('blue','red'))+
theme(axis.text.x = element_text(size=12, angle=60,hjust=1), axis.text.y = element_text(size =12))+
theme(legend.title=element_blank(),legend.text=element_text(size=14),
axis.title.y = element_text(size = 16))+
theme(axis.title.x = element_blank())+
theme(strip.text = element_text(size=16, face = 'italic'))+
theme(legend.position = 'bottom')
emm.spines.position <- data.frame(emmeans(model_leaf_spines, specs = ~ IM + Species + Position, type = "response"))
#pdf('./figures/Supplemental_Figures/FigS9.pdf', height = 5, width = 6)
ggplot(data = emm.spines.position, aes(x = Position, y = emmean, col = IM, group = IM))+
theme_bw(base_size = 14)+
geom_point(position = position_dodge(0.1), size = 4)+
geom_line(position = position_dodge(0.1))+
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2, position = position_dodge(0.1))+
facet_wrap(~Species, scales = 'free_y')+
ylab('Spinescence (%)')+
xlab('Canopy Position')+
theme(legend.position = 'bottom', legend.title = element_blank())+
scale_color_manual(values = c('blue','red'))+
theme(strip.text = element_text(face = "italic", size = 16))
spines.common.garden <- spine.data[spine.data$Site %in% c('SBBG','RSA'),] #leaves 314 samples, 24 of which are NAs
spines.common.garden$Source.IM <- ifelse(spines.common.garden$Source %in% c('Santa Rosa','Santa Cruz','Catalina'), 'Island', 'Mainland')
with(aggregate(spines ~ plant.ID + Species + Source.IM, mean, data = spines.common.garden)
, table(Species, Source.IM)) #table showing number of plants sampled for spinescence at common gardens for both Prunus and Heteromeles
model_spines_common_garden <- lmer(log(spines + 0.001) ~ Source.IM*Position + Source.IM*Species + (1|plant.ID/branch.ID) + scale(Aspect.E) + scale(Aspect.N), data = spines.common.garden[!is.na(spines.common.garden$spines),]) #
summary(model_spines_common_garden)
emm.spines.spp.common.garden <- emmeans(model_spines_common_garden, specs = ~ Source.IM + Species, type = "response") #get estimated marginal means for each species
emm.spines.spp.common.garden.contrast <- contrast(object = emm.spines.spp.common.garden, method = "pairwise", by = "Species") #generates all species-level contrasts of interest
plot.emm.spines.common.garden <- data.frame(emmeans(model_spines_common_garden, specs = pairwise ~ Source.IM + Species, type = "response")[[1]]) #generate data frame for plotting
emm.spines.spp.common.garden.contrast
emm.spines.spp.common.garden
(figs8b <- ggplot(data = plot.emm.spines.common.garden, aes(x = Source.IM, y = response, col = Source.IM))+
geom_point(size = 4)+
theme_bw(base_size = 16)+
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL, col = Source.IM), width = 0.2, size = 1)+
facet_wrap(~Species, scales = "free_y", nrow = 1)+
scale_color_manual(values = c('blue','red'))+
ylab('Spinescence (%)')+
theme(legend.position = 'bottom', legend.title = element_blank())+
theme(axis.title.x = element_blank(), axis.text.x = element_blank())+
theme(strip.text = element_text(face = "italic", size = 16)))
(leaf.spines.cg = aggregate( spines ~ Species + Source.IM + Site + plant.ID, data = cg.leaf.data, FUN = mean))
pdf('./figures/Supplemental_Figures/FigS8B.pdf', height = 4, width = 4)
figs8b+
geom_point(data = leaf.spines.cg[leaf.spines.cg$Species %in% c('Prunus','Heteromeles'),],
aes(x = Source.IM, y = spines, fill = Source.IM),
size = 2, alpha = 0.2, pch = 21,
position = position_jitterdodge(0.5))+
scale_fill_manual(values = c('blue','red'))
dev.off()
cyanide <- read.csv(file = './data_files/cyanide_measurements.csv', header = T)
head(cyanide)
cyanide$IM <- ifelse(cyanide$Site %in% c('Catalina','Santa Cruz','Santa Rosa'), 'Island', 'Mainland')
cyanide <- na.omit(cyanide[cyanide$Species != 'Cercocarpus',]) #drops 25 measurements, leaving 194 independent measures
insitu_cyanide <- cyanide[!cyanide$Source %in% c('SBBG','RSA'),] #drops another 29 measurements, leaving 165 measures
insitu_cyanide$PlantID <- paste(insitu_cyanide$Species, insitu_cyanide$PlantID, sep = "_")
plot.cyanide <- aggregate(Tissue.Concentration ~ Species + Site + IM + PlantID, mean, data = insitu_cyanide)
plot.cyanide$Site <- factor(plot.cyanide$Site, levels = c('Santa Cruz','Santa Rosa','Catalina','Santa Monicas','Stunt Ranch','Gaviota'))
#pdf('./figures/Supplemental_Figures/FigS7D.pdf', height = 6, width = 5)
ggplot(plot.cyanide, aes(x=Site, y=Tissue.Concentration))+
geom_boxplot(aes(fill=IM), outlier.color = 'white', alpha = 0.3)+
geom_point(aes(fill=IM), position = position_jitterdodge(0.5), pch = 21)+
facet_wrap(~Species, nrow = 1, scales = 'free')+
theme_bw()+
ylab('Cyanide Concentration (mg HCN / g)')+
scale_fill_manual(values = c('blue','red'))+
scale_color_manual(values = c('blue','red'))+
theme(axis.text.x = element_text(size=12, angle=60,hjust=1), axis.text.y = element_text(size =12))+
theme(legend.title=element_blank(),legend.text=element_text(size=14),
axis.title.y = element_text(size = 16))+
theme(axis.title.x = element_blank())+
theme(strip.text = element_text(size=16, face = 'italic'))+
theme(legend.position = 'bottom')
model_cyanide = lmer(log(Tissue.Concentration) ~ IM*Species + IM*Age + (1|Site/PlantID), data = insitu_cyanide)
summary(model_cyanide) #No significant difference between island and mainland, but younger tissue consistently has higher concentrations
emm.cyanide.spp <- emmeans(model_cyanide, specs = ~ IM + Species, type = "response") #get estimated marginal means for each species
emm.cyanide.spp.contrasts <- contrast(object = emm.cyanide.spp, method = "pairwise", by = "Species") #generates all species-level contrasts of interest
plot.emm.cyanide <- data.frame(emmeans(model_cyanide, specs = pairwise ~ IM + Species, type = "response")[[1]]) #generate data frame for plotting
emm.cyanide.spp.contrasts
emm.cyanide.spp
(fig2d <- ggplot(data = plot.emm.cyanide, aes(x = IM, y = response, col = IM))+
geom_point(size = 4)+
theme_bw(base_size = 16)+
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL, col = IM), width = 0.2, size = 1)+
facet_wrap(~Species, scales = "free_y", nrow = 1)+
scale_color_manual(values = c('blue','red'))+
ylab('CNglcs (mg HCN/g)')+
theme(legend.position = 'bottom', legend.title = element_blank())+
theme(axis.title.x = element_blank(), axis.text.x = element_blank())+
theme(strip.text = element_text(face = "italic", size = 16)))
#pdf('./figures/Fig2d.pdf', height = 4, width = 4)
fig2d+
geom_point(data = plot.cyanide, aes(x = IM, y = Tissue.Concentration, fill = IM), size = 2, alpha = 0.2, pch = 21,
position = position_jitterdodge(0.5))+
scale_fill_manual(values = c('blue','red'))
emm.cyanide.age <- data.frame(emmeans(model_cyanide, specs = ~ IM + Species + Age, type = "response"))
emm.cyanide.age$Age <- factor(emm.cyanide.age$Age, levels = c('young','old')) #reorder so that young tissue is plotted first
#pdf('./figures/Supplemental_Figures/FigS10.pdf', height = 5, width = 6)
ggplot(data = emm.cyanide.age, aes(x = Age, y = response, col = IM, group = IM))+
theme_bw(base_size = 14)+
geom_point(position = position_dodge(0.1), size = 4)+
geom_line(position = position_dodge(0.1))+
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2, position = position_dodge(0.1))+
facet_wrap(~Species, scales = 'free_y')+
ylab('CNglc content (mg HCN/g)')+
xlab('Leaf Age')+
theme(legend.position = 'bottom', legend.title = element_blank())+
scale_color_manual(values = c('blue','red'))+
theme(strip.text = element_text(face = "italic", size = 16))
model_cyanide_common_garden <- lmer(log(Tissue.Concentration) ~ IM*Age + IM*Species + (1|PlantID), data = cyanide[cyanide$Source %in% c('SBBG','RSA'),])
summary(model_cyanide_common_garden)
emm.cyanide.spp.common.garden <- emmeans(model_cyanide_common_garden, specs = ~ IM + Species, type = "response") #get estimated marginal means for each species
emm.cyanide.spp.common.garden.contrasts <- contrast(object = emm.cyanide.spp.common.garden, method = "pairwise", by = "Species") #generates all species-level contrasts of interest
plot.emm.cyanide.common.garden <- data.frame(emmeans(model_cyanide_common_garden, specs = pairwise ~ IM + Species, type = "response")[[1]]) #generate data frame for plotting
emm.cyanide.spp.common.garden.contrasts
emm.cyanide.spp.common.garden
leaf.data$plant.ID
levels(leaf.data$plant.ID)
unique(leaf.data$plant.ID)
7.84/sqrt(609) * 1.96
(7.84/sqrt(609)) * 1.96
library(plyr)
library(stringr)
library(sp)
library(rgdal)
shrub.bearings = read.csv(file="~/Downloads/shrubs_coordinates.csv",head=T) #load in plant coordinates
head(shrub.bearings) #need to split into separate lat/long columns; first remove the \xa1 that results from degree symbol
shrub.bearings$Position <- gsub('\xa1', '', shrub.bearings$Position) #removes that particular string from all entries; now need to split this text string at the space
split.co <- strsplit(shrub.bearings$Position, " ")
for(i in 1:length(split.co)){
shrub.bearings$lat[i] <- split.co[[i]][1]
} #loop through elements of split.co to extract latitudes
for(i in 1:length(split.co)){
shrub.bearings$lon[i] <- split.co[[i]][2]
} #same for longitudes
shrub.bearings$lat <- as.numeric(gsub('N', '', shrub.bearings$lat)) #drop N and convert to numeric
shrub.bearings$lon <- as.numeric(gsub('W', '', shrub.bearings$lon))*-1 #drop W, convert to numeric, multiply by -1 to imply longitude is west
head(shrub.bearings)
plant.spp <- (str_extract(shrub.bearings$Name, "[aA-zZ]+")) #extract text from ID
plant.spp <- revalue(plant.spp, c("CERC"="Cercocarpus","CMEG"="Ceanothus","DEND"="Dendromecon","HET"="Heteromeles","PRUN"="Prunus","QPAC"="Quercus","QBER"="Quercus")) #rename species so that they match
plant.num <- (str_extract(shrub.bearings$Name, "[0-9]+")) #extract numbers from ID
plant.ID <- paste(plant.spp, plant.num, sep = "_")
shrub.bearings$plant.ID <- plant.ID
shrub.bearings$species <- plant.spp
leaf.data.spatial <- merge(shrub.bearings, leaf.data, by = "plant.ID")
df1=aggregate(lat ~ plant.ID + Site, data = leaf.data.spatial, FUN = mean)
df2=aggregate(lon ~ plant.ID + Site, data = leaf.data.spatial, FUN = mean)
plant.mapping <- merge(df1,df2, by = c("plant.ID","Site"))
spp2 <- (str_extract(plant.mapping$plant.ID, "[aA-zZ]+"))
plant.mapping$species <- gsub('_', '', spp2)
plant.mapping.sp <- SpatialPointsDataFrame(plant.mapping[,c(4,3)], plant.mapping[,-c(4,3)])
crs.geo<-CRS("+init=epsg:4326")
proj4string(plant.mapping.sp) <- crs.geo #this is doing the same things as the "coordinates" function and is just combining lat and lon into a readable single entity for spatial mapping objects
library(raster)
r <- getData("worldclim",var="bio",res=2.5)
r2 <- r[[c(1:19)]]
lats <- plant.mapping$lat
lons <- plant.mapping$lon
coords <- data.frame(x=lons,y=lats)
points <- SpatialPoints(coords, proj4string = r@crs)
values <- extract(r2,points)
(values<-as.data.frame(values))
(bioclim.vars <- cbind(plant.mapping, values))
bioclim_layer <- vector()
cell_count_unique <- vector()
#pdf("./figures/Supplemental_Figures/Fig.S3C.pdf", height = 10, width = 10)
par(mfrow = c(4,5))
for(i in 1:19) {
bioclim_layer[i] <- paste('bio', i, sep = "")
hist(bioclim.vars[,bioclim_layer[i]],
main = bioclim_layer[i],
xlab = 'value')
}
drop.columns.pca.clim <- c("plant.ID", "Site", "lat", "lon", "species") #select columns to exclude from analysis
bioclim.pca <- bioclim.vars[,!(names(bioclim.vars) %in% drop.columns.pca.clim)] #drop columns with the aforementioned names
(fit.clim <- princomp(bioclim.pca))
pc.sum <- Reduce("+",fit.clim[[1]]) #get sum of PC scores
fit.clim[[1]][1] / pc.sum #first PC explains 83.6% of variance
fit.clim[[1]][2] / pc.sum #second PC explains 13.3% of variance
bioclim.vars$PC1 <- fit.clim$scores[,1] #extract first principal component and append to original df
bioclim.vars$PC2 <- fit.clim$scores[,2] #same for second PC
bioclim.vars$PC3 <- fit.clim$scores[,3] #and third PC
islands <- c("Santa Rosa", "Santa Cruz", "Catalina")
bioclim.vars$IM <- ifelse(bioclim.vars$Site %in% islands, "Island", "Mainland")
#pdf("./figures/Supplemental_Figures/Fig.S3A.pdf", height = 5, width = 7)
ggplot(bioclim.vars, aes(x = PC1, y = PC2*-1, pch = Site, fill = IM))+
geom_point(size = 5)+
theme_bw(base_size = 16)+
xlab('PC1 (83.6%)')+
ylab('PC2 (13.3%)')+
scale_shape_manual(values = c(21,22,23,21,22,23))+
scale_fill_manual(values = c('blue','red'), guide = 'none')+
theme(legend.position = 'right')+
theme(axis.text = element_blank())
bioclim.vars$Site
bioclim.vars$IM <- ifelse(bioclim.vars$Site %in% islands, "Island",
ifelse(bioclim.vars$Site %in% c('RSA','SBBG'), 'Botanical Garden'), "Mainland")
bioclim.vars$IM <- ifelse(bioclim.vars$Site %in% islands, "Island",
ifelse(bioclim.vars$Site %in% c('RSA','SBBG'), 'Botanical Garden', "Mainland"))
bioclim.vars$IM
bioclim.vars$Site
table(bioclim.vars$Site)
library(effectsize)
d1 <- data.frame(cohens_d(leaf.area.agg$True_area, leaf.area.agg$IM)) #in situ leaf area
d2 <- data.frame(cohens_d(leaf.area.cg.agg$True_area, leaf.area.cg.agg$Source.IM)) #common garden leaf area
d3 <- data.frame(cohens_d(sla.agg$SLA, sla.agg$IM)) #in situ SLA, no common garden estimates available
spines.agg.cg <- aggregate(spines ~ Species + Site + Source.IM + plant.ID, data = spine.data[spine.data$Site %in% c('SBBG','RSA'),], mean)
d4 <- data.frame(cohens_d(spines.agg$spines, spines.agg$IM)) #in situ spinescence
d5 <- data.frame(cohens_d(spines.agg.cg$spines, spines.agg.cg$Source.IM)) #in situ spinescence
cyanide.agg <- aggregate(Tissue.Concentration ~ Species + Site + IM + PlantID, data = insitu_cyanide, mean)
d6 <- data.frame(cohens_d(cyanide.agg$Tissue.Concentration, cyanide.agg$IM)) #in situ cyanide
cyanide.agg.cg <- aggregate(Tissue.Concentration ~ Species + Site + IM + PlantID, data = cyanide[cyanide$Source %in% c('SBBG','RSA'),], mean)
d7 <- data.frame(cohens_d(cyanide.agg.cg$Tissue.Concentration, cyanide.agg.cg$IM)) #common garden cyanide
eff_size_df1 <- rbind(d1, d2, d3, d4, d5, d6, d7)
eff_size_df1$trait <- c('Leaf Area', 'Leaf Area', 'SLA', 'Spinescence', 'Spinescence', 'CNglc Content', 'CNglc Content')
eff_size_df1$comparison <- c('This study (in situ)', 'This study (common garden)', 'This study (in situ)', 'This study (in situ)', 'This study (common garden)', 'This study (in situ)', 'This study (common garden)')
eff_size_df1
eff_size_df <- data.frame(rbind(eff_size_df1,
c(1.27109515, 'SD', 0.556537944, 1.985652355, 'Leaf Area', 'Bowen and Van Vuren (1997)'),
c(-2.14438919, 'SD', -2.327746765, -1.961031616, 'Spinescence', 'Bowen and Van Vuren (1997)')))
eff_size_df$Cohens_d <- as.numeric(eff_size_df$Cohens_d)
eff_size_df$CI_low <- as.numeric(eff_size_df$CI_low)
eff_size_df$CI_high <- as.numeric(eff_size_df$CI_high)
eff_size_df$trait <- as.factor(eff_size_df$trait)
eff_size_df$trait <- factor(eff_size_df$trait, levels = c('Leaf Area', 'SLA', 'Spinescence', 'CNglc Content'))
eff_size_df$comparison <- factor(eff_size_df$comparison, levels = c('Bowen and Van Vuren (1997)', 'This study (in situ)', 'This study (common garden)'))
#pdf('./figures/Fig4.pdf', height = 5, width = 6)
ggplot(eff_size_df, aes(x = comparison, y = Cohens_d, col = comparison))+
geom_point(size = 4)+
geom_errorbar(aes(ymin = CI_low, ymax = CI_high), width = 0.2, size = 1)+
facet_wrap(~trait, nrow = 1)+
theme_bw(base_size = 14)+
theme(axis.text.x = element_blank(), axis.title.x = element_blank(), legend.position = 'bottom',
legend.title = element_blank(), legend.box = 'vertical', axis.ticks = element_blank())+
geom_hline(yintercept = 0, lty = 2, size = 0.5)+
ylab("Standardized Insularity Effect (Cohen's D)")+
scale_color_manual(values = c('darkblue','turquoise','darkgrey'))+
theme(legend.direction = 'vertical')
eff_size_df$comparison <- factor(eff_size_df$comparison, levels = c('Bowen and Van Vuren (1997)', 'This study (in situ)', 'This study (botanic garden)'))
#pdf('./figures/Fig4.pdf', height = 5, width = 6)
ggplot(eff_size_df, aes(x = comparison, y = Cohens_d, col = comparison))+
geom_point(size = 4)+
geom_errorbar(aes(ymin = CI_low, ymax = CI_high), width = 0.2, size = 1)+
facet_wrap(~trait, nrow = 1)+
theme_bw(base_size = 14)+
theme(axis.text.x = element_blank(), axis.title.x = element_blank(), legend.position = 'bottom',
legend.title = element_blank(), legend.box = 'vertical', axis.ticks = element_blank())+
geom_hline(yintercept = 0, lty = 2, size = 0.5)+
ylab("Standardized Insularity Effect (Cohen's D)")+
scale_color_manual(values = c('darkblue','turquoise','darkgrey'))+
theme(legend.direction = 'vertical')
bvv97 <- data.frame(readxl::read_xlsx('./data_files/Bowen and Van Vuren Effect Sizes.xlsx'))
library(effectsize)
d1 <- data.frame(cohens_d(leaf.area.agg$True_area, leaf.area.agg$IM)) #in situ leaf area
d2 <- data.frame(cohens_d(leaf.area.cg.agg$True_area, leaf.area.cg.agg$Source.IM)) #common garden leaf area
d3 <- data.frame(cohens_d(sla.agg$SLA, sla.agg$IM)) #in situ SLA, no common garden estimates available
spines.agg.cg <- aggregate(spines ~ Species + Site + Source.IM + plant.ID, data = spine.data[spine.data$Site %in% c('SBBG','RSA'),], mean)
d4 <- data.frame(cohens_d(spines.agg$spines, spines.agg$IM)) #in situ spinescence
d5 <- data.frame(cohens_d(spines.agg.cg$spines, spines.agg.cg$Source.IM)) #in situ spinescence
cyanide.agg <- aggregate(Tissue.Concentration ~ Species + Site + IM + PlantID, data = insitu_cyanide, mean)
d6 <- data.frame(cohens_d(cyanide.agg$Tissue.Concentration, cyanide.agg$IM)) #in situ cyanide
cyanide.agg.cg <- aggregate(Tissue.Concentration ~ Species + Site + IM + PlantID, data = cyanide[cyanide$Source %in% c('SBBG','RSA'),], mean)
d7 <- data.frame(cohens_d(cyanide.agg.cg$Tissue.Concentration, cyanide.agg.cg$IM)) #common garden cyanide
eff_size_df1 <- rbind(d1, d2, d3, d4, d5, d6, d7)
eff_size_df1$trait <- c('Leaf Area', 'Leaf Area', 'SLA', 'Spinescence', 'Spinescence', 'CNglc Content', 'CNglc Content')
eff_size_df1$comparison <- c('This study (in situ)', 'This study (botanic garden)', 'This study (in situ)', 'This study (in situ)', 'This study (botanic garden)', 'This study (in situ)', 'This study (botanic garden)')
eff_size_df1
eff_size_df <- data.frame(rbind(eff_size_df1,
c(1.27109515, 'SD', 0.556537944, 1.985652355, 'Leaf Area', 'Bowen and Van Vuren (1997)'),
c(-2.14438919, 'SD', -2.327746765, -1.961031616, 'Spinescence', 'Bowen and Van Vuren (1997)')))
eff_size_df$Cohens_d <- as.numeric(eff_size_df$Cohens_d)
eff_size_df$CI_low <- as.numeric(eff_size_df$CI_low)
eff_size_df$CI_high <- as.numeric(eff_size_df$CI_high)
eff_size_df$trait <- as.factor(eff_size_df$trait)
eff_size_df$trait <- factor(eff_size_df$trait, levels = c('Leaf Area', 'SLA', 'Spinescence', 'CNglc Content'))
eff_size_df$comparison <- factor(eff_size_df$comparison, levels = c('Bowen and Van Vuren (1997)', 'This study (in situ)', 'This study (botanic garden)'))
#pdf('./figures/Fig4.pdf', height = 5, width = 6)
ggplot(eff_size_df, aes(x = comparison, y = Cohens_d, col = comparison))+
geom_point(size = 4)+
geom_errorbar(aes(ymin = CI_low, ymax = CI_high), width = 0.2, size = 1)+
facet_wrap(~trait, nrow = 1)+
theme_bw(base_size = 14)+
theme(axis.text.x = element_blank(), axis.title.x = element_blank(), legend.position = 'bottom',
legend.title = element_blank(), legend.box = 'vertical', axis.ticks = element_blank())+
geom_hline(yintercept = 0, lty = 2, size = 0.5)+
ylab("Standardized Insularity Effect (Cohen's D)")+
scale_color_manual(values = c('darkblue','turquoise','darkgrey'))+
theme(legend.direction = 'vertical')
pdf('./figures/Fig4.pdf', height = 5, width = 6)
ggplot(eff_size_df, aes(x = comparison, y = Cohens_d, col = comparison))+
geom_point(size = 4)+
geom_errorbar(aes(ymin = CI_low, ymax = CI_high), width = 0.2, size = 1)+
facet_wrap(~trait, nrow = 1)+
theme_bw(base_size = 14)+
theme(axis.text.x = element_blank(), axis.title.x = element_blank(), legend.position = 'bottom',
legend.title = element_blank(), legend.box = 'vertical', axis.ticks = element_blank())+
geom_hline(yintercept = 0, lty = 2, size = 0.5)+
ylab("Standardized Insularity Effect (Cohen's D)")+
scale_color_manual(values = c('darkblue','turquoise','darkgrey'))+
theme(legend.direction = 'vertical')
dev.off()
calibration <- read.csv(file = './data_files/cyanide_calibration.csv')
head(calibration)
library(ggplot2)
ggplot(calibration, aes(x = conc, y = abs))+
geom_point()+
geom_smooth(method = 'lm')
ggplot(calibration, aes(x = conc, y = abs))+
theme_bw(base_size = 14)+
geom_point()+
geom_smooth(method = 'lm')+
ylab('Absorbance Value')+
xlab('Potassium Cyanide Concentration (mg/L)')
ggplot(calibration, aes(x = conc, y = abs))+
theme_bw(base_size = 14)+
geom_point()+
geom_smooth(method = 'lm', se = F)+
ylab('Absorbance Value')+
xlab('Potassium Cyanide Concentration (mg/L)')
ggplot(calibration, aes(x = conc, y = abs))+
theme_bw(base_size = 14)+
geom_point(size = 3)+
geom_smooth(method = 'lm', se = F)+
ylab('Absorbance Value')+
xlab('Potassium Cyanide Concentration (mg/L)')
summary(lm(abs ~ conc, calibration))
summary(lm(abs ~ conc, calibration))[[1]]
summary(lm(abs ~ conc, calibration))[[9]]
R2 <- summary(lm(abs ~ conc, calibration))[[9]]
ggplot(calibration, aes(x = conc, y = abs))+
theme_bw(base_size = 14)+
geom_point(size = 3)+
geom_smooth(method = 'lm', se = F)+
ylab('Absorbance Value')+
xlab('Potassium Cyanide Concentration (mg/L)')+
annotate('text', label = R2)
ggplot(calibration, aes(x = conc, y = abs))+
theme_bw(base_size = 14)+
geom_point(size = 3)+
geom_smooth(method = 'lm', se = F)+
ylab('Absorbance Value')+
xlab('Potassium Cyanide Concentration (mg/L)')+
annotate('text', label = R2, x = 0.6, y = 0.4)
summary(lm(abs ~ conc, calibration))[[9]] #extract R^2 for correlation between concentration and absorbance
ggplot(calibration, aes(x = conc, y = abs))+
theme_bw(base_size = 14)+
geom_point(size = 3)+
geom_smooth(method = 'lm', se = F)+
ylab('Absorbance Value')+
xlab('Potassium Cyanide Concentration (mg/L)')+
annotate('text', label = R2, x = 0.6, y = 0.4)
ggplot(calibration, aes(x = conc, y = abs))+
theme_bw(base_size = 14)+
geom_point(size = 3)+
geom_smooth(method = 'lm', se = F)+
ylab('Absorbance Value')+
xlab('Potassium Cyanide Concentration (mg/L)')
pdf('./figures/Supplemental_Figures/FigS13.pdf', height = 4, width = 4)
ggplot(calibration, aes(x = conc, y = abs))+
theme_bw(base_size = 14)+
geom_point(size = 3)+
geom_smooth(method = 'lm', se = F)+
ylab('Absorbance Value')+
xlab('Potassium Cyanide Concentration (mg/L)')
dev.off()
pdf('./figures/Supplemental_Figures/FigS13.pdf', height = 6, width = 6)
ggplot(calibration, aes(x = conc, y = abs))+
theme_bw(base_size = 14)+
geom_point(size = 3)+
geom_smooth(method = 'lm', se = F)+
ylab('Absorbance Value')+
xlab('Potassium Cyanide Concentration (mg/L)')
dev.off()
